% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signifiers.R
\docType{class}
\name{Signifiers}
\alias{Signifiers}
\title{R6 class that represents a framework's signifier definitions.}
\format{
\code{\link{R6Class}} object.
}
\value{
A list of the column names associated with the signifier ids passed in.

A list of the column title names associated with the signifier ids passed in.

The title of the signifier content.

A vector of the packages supported signifier classes

A user defined object.

The signifier id

NULL if actual export otherwise the dataframe of titles.

NULL if actual export otherwise the dataframe of titles.

NULL if actual export otherwise the dataframe of titles.

The triad or dyad zone column name.

The anchor text.

an unnamed vector of the triad zone contingency table headers

A vector with all the triad zone column names.

A list of the dyad anchor ids.

an unnamed vector of the dyad zone contingency table headers

A vector with all the dyad zone column names.

a list of stones stone names for each stone stone

A list of the stones_id and the stone_id contained in the column id.

an unnamed vector of the stone zone contingency table headers

A vector of the contingency table row and column names (from_to is NULL) or headers for the correlation diagrams

A vector of the contingency table row and column names (from_to is NULL) or headers for the correlation diagrams

A vector of the contingency table row and column names (from_to is NULL) or headers for the correlation diagrams

A vector of the contingency table row and column names (from_to is NULL) or headers for the correlation diagrams

an unnamed vector of the stone zone types or a named list of stone zone types

the data column name for the stones id and zone type

The data column names for the stone id and zone type

The data column name for the x zone stones id, stone id

The data column names for the x zone stones id

The data column name for the y zone stones id, stone id

The data column names for the y zone stones id

The data column name for the 4 zone stones id, stone id

The data column names for the 4 zone stones id

The data column name for the 9 zone stones id, stone id

The data column name for the 9 zone stones id
}
\description{
The `signifiers` class is the primary class for
representing a framework's signifier definition. It will include by
default embedded frameworks and if a dashboard, the linked frameworks
including definitions of data filtering associated with the dashboard
primary framework.
The signifiers class is packaged with a large number of helper functions
that aid R programmers to work with a framework's capture data.
}
\examples{
# The package vignettes include extensive examples of working with the
# signifiers class.
library(sensemakerframeworkr)
my_fw <- signifiers$new("mydir/projectFramework.json", NULL, NULL, NULL)
fw_triads <- self$get_signifier_ids_by_type("triad")
triad_01_image <- pt$get_triad_background_image(fw_triads[[1]])
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{framework_json}}{The JSON for the processed framework}

\item{\code{frameworks}}{A list of all framework names with framework ids as list ids}

\item{\code{framework_graph}}{An igraph graph of the framework definition (showing linked and embedded frameworks if they exist)}

\item{\code{framework_embedded}}{An igraph graph of the embedded frameworks (not linked)}

\item{\code{polymorphic_definitions}}{Named list giving the R6 classes of the polymorphic signifier definitions.}

\item{\code{polymorphic_type_by_ids}}{A named list of the ids defining the polymorphic signifiers, values are types, list names are ids}

\item{\code{polymorphic_id_list_by_type}}{A list of lists of polymorphic ids by type type -> list(ids)}

\item{\code{polymorphic_ids_by_title}}{A list of  polymorphic ids whose names are the signifier titles}

\item{\code{polymorphic_anchor_modification}}{A list containing polymorphic ids (names) for polymorphic to ids (values) where anchors have changed}

\item{\code{types_by_signifierid}}{Named list giving the signifier type (value) for each signifier ID (name)}

\item{\code{signifierids_by_type}}{Named list giving the signifier ids (value) for each signifier type (name)}

\item{\code{signifier_definitions}}{Named list giving the R6 class of the signifier definition (value) for each signifier ID (name)}

\item{\code{types_with_signifiers}}{Vector giving the signifier types contained in the framework definition}

\item{\code{parent_framework}}{To Depreciate - Named single entry list giving the name of the parent framework (value) with parent id as name.}

\item{\code{parent_header}}{Properties in the parent framework header.}

\item{\code{signifier_counts_linked_frameworks_type}}{ToDo rename to signifier_counts_type Vector giving the signifier types contained in the framework definition in the parent and linked frameworks}

\item{\code{types_by_signifierid_framework}}{Named list containing the signifier id and signifier type (value name/value pair) for the framework id (name)}

\item{\code{signifierids_by_type_framework}}{List containing the signifier type and ids (value name/values pair) for the framework id (name)}

\item{\code{types_with_signifiers_framework}}{Named list containing a vector of signifier types (value) contained in the framework id (name)}

\item{\code{linked_other_signifier}}{The other signifier ID for list other options ToDo - this should be deleted but currently used in list apply (but not sure why)}

\item{\code{supported_signifier_types}}{Vector containing all the signifier types supported in the SenseMaker® platform}

\item{\code{shape_signifier_types}}{Vector containing all the shape signifier types supported in the SenseMaker® platform}

\item{\code{chat_signifier_types}}{Vector containing all the signifier types best for chatGPT}

\item{\code{signifier_properties}}{Vector containing the property names for the signifier definition main header properties.}

\item{\code{signifier_classes}}{Vector of the signifier classes supported by the package. These are "signifier", "zone", "region", "date", "multi_select_item", "single_select_item", "meta"}

\item{\code{shiny_tree_objects}}{Vector containing any shinyTree objects created for dyad/tryad/stone structures.}

\item{\code{signifier_in_order}}{Vector containing the signifier ids in the order in which they appear in the framework definition.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Signifiers-new}{\code{Signifiers$new()}}
\item \href{#method-Signifiers-flatten_list}{\code{Signifiers$flatten_list()}}
\item \href{#method-Signifiers-get_a_col_name}{\code{Signifiers$get_a_col_name()}}
\item \href{#method-Signifiers-get_col_names_ids}{\code{Signifiers$get_col_names_ids()}}
\item \href{#method-Signifiers-get_col_names_titles}{\code{Signifiers$get_col_names_titles()}}
\item \href{#method-Signifiers-get_a_signifier_content_name}{\code{Signifiers$get_a_signifier_content_name()}}
\item \href{#method-Signifiers-call_a_method}{\code{Signifiers$call_a_method()}}
\item \href{#method-Signifiers-get_framework_ids}{\code{Signifiers$get_framework_ids()}}
\item \href{#method-Signifiers-get_used_signifier_types}{\code{Signifiers$get_used_signifier_types()}}
\item \href{#method-Signifiers-get_supported_signifier_types}{\code{Signifiers$get_supported_signifier_types()}}
\item \href{#method-Signifiers-get_supported_signifier_classes}{\code{Signifiers$get_supported_signifier_classes()}}
\item \href{#method-Signifiers-get_shape_signifier_types}{\code{Signifiers$get_shape_signifier_types()}}
\item \href{#method-Signifiers-get_shape_used_signifier_types}{\code{Signifiers$get_shape_used_signifier_types()}}
\item \href{#method-Signifiers-get_chat_signifier_types}{\code{Signifiers$get_chat_signifier_types()}}
\item \href{#method-Signifiers-get_parent_language}{\code{Signifiers$get_parent_language()}}
\item \href{#method-Signifiers-get_all_signifier_ids}{\code{Signifiers$get_all_signifier_ids()}}
\item \href{#method-Signifiers-get_all_signifier_titles}{\code{Signifiers$get_all_signifier_titles()}}
\item \href{#method-Signifiers-get_all_signifier_titles_df}{\code{Signifiers$get_all_signifier_titles_df()}}
\item \href{#method-Signifiers-get_signifier_ids_layout_order}{\code{Signifiers$get_signifier_ids_layout_order()}}
\item \href{#method-Signifiers-get_all_signifiers_list}{\code{Signifiers$get_all_signifiers_list()}}
\item \href{#method-Signifiers-get_signifier_ids_by_type}{\code{Signifiers$get_signifier_ids_by_type()}}
\item \href{#method-Signifiers-get_signifier_concat_ids_title_by_type}{\code{Signifiers$get_signifier_concat_ids_title_by_type()}}
\item \href{#method-Signifiers-change_signifier_content_titles}{\code{Signifiers$change_signifier_content_titles()}}
\item \href{#method-Signifiers-change_signifier_content_title}{\code{Signifiers$change_signifier_content_title()}}
\item \href{#method-Signifiers-get_signifier_supported_header_properties}{\code{Signifiers$get_signifier_supported_header_properties()}}
\item \href{#method-Signifiers-get_signifier_na_column_name}{\code{Signifiers$get_signifier_na_column_name()}}
\item \href{#method-Signifiers-get_signifier_count_by_type}{\code{Signifiers$get_signifier_count_by_type()}}
\item \href{#method-Signifiers-get_signifier_type_by_id}{\code{Signifiers$get_signifier_type_by_id()}}
\item \href{#method-Signifiers-get_signifier_by_id_R6}{\code{Signifiers$get_signifier_by_id_R6()}}
\item \href{#method-Signifiers-get_signifier_property}{\code{Signifiers$get_signifier_property()}}
\item \href{#method-Signifiers-get_signifier_title}{\code{Signifiers$get_signifier_title()}}
\item \href{#method-Signifiers-get_signifier_tooltip}{\code{Signifiers$get_signifier_tooltip()}}
\item \href{#method-Signifiers-get_signifier_type}{\code{Signifiers$get_signifier_type()}}
\item \href{#method-Signifiers-get_signifier_allow_na}{\code{Signifiers$get_signifier_allow_na()}}
\item \href{#method-Signifiers-get_signifier_fragment}{\code{Signifiers$get_signifier_fragment()}}
\item \href{#method-Signifiers-get_signifier_required}{\code{Signifiers$get_signifier_required()}}
\item \href{#method-Signifiers-get_signifier_sticky}{\code{Signifiers$get_signifier_sticky()}}
\item \href{#method-Signifiers-get_signifier_content_R6}{\code{Signifiers$get_signifier_content_R6()}}
\item \href{#method-Signifiers-get_signifier_class}{\code{Signifiers$get_signifier_class()}}
\item \href{#method-Signifiers-get_signifier_include}{\code{Signifiers$get_signifier_include()}}
\item \href{#method-Signifiers-get_signifier_hide}{\code{Signifiers$get_signifier_hide()}}
\item \href{#method-Signifiers-get_signifier_user_data_entry}{\code{Signifiers$get_signifier_user_data_entry()}}
\item \href{#method-Signifiers-set_signifier_user_data_entry}{\code{Signifiers$set_signifier_user_data_entry()}}
\item \href{#method-Signifiers-get_signifier_is_polymorphic}{\code{Signifiers$get_signifier_is_polymorphic()}}
\item \href{#method-Signifiers-get_signifier_is_poly_transformed}{\code{Signifiers$get_signifier_is_poly_transformed()}}
\item \href{#method-Signifiers-get_signifier_poly_to_id}{\code{Signifiers$get_signifier_poly_to_id()}}
\item \href{#method-Signifiers-change_signifier_property_value}{\code{Signifiers$change_signifier_property_value()}}
\item \href{#method-Signifiers-change_signifier_class}{\code{Signifiers$change_signifier_class()}}
\item \href{#method-Signifiers-change_signifier_title}{\code{Signifiers$change_signifier_title()}}
\item \href{#method-Signifiers-change_signifier_titles}{\code{Signifiers$change_signifier_titles()}}
\item \href{#method-Signifiers-change_signifier_tooltip}{\code{Signifiers$change_signifier_tooltip()}}
\item \href{#method-Signifiers-change_signifier_allow_na}{\code{Signifiers$change_signifier_allow_na()}}
\item \href{#method-Signifiers-change_signifier_fragment}{\code{Signifiers$change_signifier_fragment()}}
\item \href{#method-Signifiers-change_signifier_required}{\code{Signifiers$change_signifier_required()}}
\item \href{#method-Signifiers-change_signifier_sticky}{\code{Signifiers$change_signifier_sticky()}}
\item \href{#method-Signifiers-change_signifiers_include}{\code{Signifiers$change_signifiers_include()}}
\item \href{#method-Signifiers-change_signifier_include}{\code{Signifiers$change_signifier_include()}}
\item \href{#method-Signifiers-change_signifier_hide}{\code{Signifiers$change_signifier_hide()}}
\item \href{#method-Signifiers-change_signifier_is_polymorphic}{\code{Signifiers$change_signifier_is_polymorphic()}}
\item \href{#method-Signifiers-change_signifier_is_poly_transformed}{\code{Signifiers$change_signifier_is_poly_transformed()}}
\item \href{#method-Signifiers-change_poly_to_id}{\code{Signifiers$change_poly_to_id()}}
\item \href{#method-Signifiers-export_signifier_properties}{\code{Signifiers$export_signifier_properties()}}
\item \href{#method-Signifiers-export_signifier_header_properties}{\code{Signifiers$export_signifier_header_properties()}}
\item \href{#method-Signifiers-export_signifier_titles}{\code{Signifiers$export_signifier_titles()}}
\item \href{#method-Signifiers-export_content_titles}{\code{Signifiers$export_content_titles()}}
\item \href{#method-Signifiers-export_multiselect_list_items}{\code{Signifiers$export_multiselect_list_items()}}
\item \href{#method-Signifiers-import_signifier_properties}{\code{Signifiers$import_signifier_properties()}}
\item \href{#method-Signifiers-change_signifier_content_proprty_value}{\code{Signifiers$change_signifier_content_proprty_value()}}
\item \href{#method-Signifiers-change_signifier_content_label_value}{\code{Signifiers$change_signifier_content_label_value()}}
\item \href{#method-Signifiers-get_zone_name}{\code{Signifiers$get_zone_name()}}
\item \href{#method-Signifiers-get_anchor_value}{\code{Signifiers$get_anchor_value()}}
\item \href{#method-Signifiers-get_anchor_ids}{\code{Signifiers$get_anchor_ids()}}
\item \href{#method-Signifiers-get_anchor_text}{\code{Signifiers$get_anchor_text()}}
\item \href{#method-Signifiers-get_anchor_compositional_column_names}{\code{Signifiers$get_anchor_compositional_column_names()}}
\item \href{#method-Signifiers-get_anchor_R6}{\code{Signifiers$get_anchor_R6()}}
\item \href{#method-Signifiers-get_item_ids}{\code{Signifiers$get_item_ids()}}
\item \href{#method-Signifiers-get_parent_id}{\code{Signifiers$get_parent_id()}}
\item \href{#method-Signifiers-get_parent_name}{\code{Signifiers$get_parent_name()}}
\item \href{#method-Signifiers-get_parent_signifier_ids}{\code{Signifiers$get_parent_signifier_ids()}}
\item \href{#method-Signifiers-get_parent_framework_signifier_ids_by_type}{\code{Signifiers$get_parent_framework_signifier_ids_by_type()}}
\item \href{#method-Signifiers-get_parent_framework_triad_ids}{\code{Signifiers$get_parent_framework_triad_ids()}}
\item \href{#method-Signifiers-get_parent_framework_dyad_ids}{\code{Signifiers$get_parent_framework_dyad_ids()}}
\item \href{#method-Signifiers-get_parent_framework_list_ids}{\code{Signifiers$get_parent_framework_list_ids()}}
\item \href{#method-Signifiers-get_parent_framework_stones_ids}{\code{Signifiers$get_parent_framework_stones_ids()}}
\item \href{#method-Signifiers-get_parent_framework_freetext_ids}{\code{Signifiers$get_parent_framework_freetext_ids()}}
\item \href{#method-Signifiers-get_parent_framework_imageselect_ids}{\code{Signifiers$get_parent_framework_imageselect_ids()}}
\item \href{#method-Signifiers-get_parent_framework_audio_ids}{\code{Signifiers$get_parent_framework_audio_ids()}}
\item \href{#method-Signifiers-get_parent_framework_photo_ids}{\code{Signifiers$get_parent_framework_photo_ids()}}
\item \href{#method-Signifiers-get_parent_framework_uniqueid_ids}{\code{Signifiers$get_parent_framework_uniqueid_ids()}}
\item \href{#method-Signifiers-get_parent_framework_type_by_signifierid}{\code{Signifiers$get_parent_framework_type_by_signifierid()}}
\item \href{#method-Signifiers-get_parent_framework_count_by_type}{\code{Signifiers$get_parent_framework_count_by_type()}}
\item \href{#method-Signifiers-get_parent_single_select_list_ids}{\code{Signifiers$get_parent_single_select_list_ids()}}
\item \href{#method-Signifiers-get_parent_multi_select_list_ids}{\code{Signifiers$get_parent_multi_select_list_ids()}}
\item \href{#method-Signifiers-remove_signifier_definition}{\code{Signifiers$remove_signifier_definition()}}
\item \href{#method-Signifiers-is_linked_framework}{\code{Signifiers$is_linked_framework()}}
\item \href{#method-Signifiers-get_linked_framework_count}{\code{Signifiers$get_linked_framework_count()}}
\item \href{#method-Signifiers-get_parent_framework_id}{\code{Signifiers$get_parent_framework_id()}}
\item \href{#method-Signifiers-get_parent_framework_name}{\code{Signifiers$get_parent_framework_name()}}
\item \href{#method-Signifiers-get_linked_framework_ids}{\code{Signifiers$get_linked_framework_ids()}}
\item \href{#method-Signifiers-get_linked_framework_names}{\code{Signifiers$get_linked_framework_names()}}
\item \href{#method-Signifiers-get_linked_framework_list}{\code{Signifiers$get_linked_framework_list()}}
\item \href{#method-Signifiers-get_linked_framework_mcq_list}{\code{Signifiers$get_linked_framework_mcq_list()}}
\item \href{#method-Signifiers-get_linked_framework_selection_lists}{\code{Signifiers$get_linked_framework_selection_lists()}}
\item \href{#method-Signifiers-get_linked_framework_chain}{\code{Signifiers$get_linked_framework_chain()}}
\item \href{#method-Signifiers-get_linked_framework_mcq_list_id}{\code{Signifiers$get_linked_framework_mcq_list_id()}}
\item \href{#method-Signifiers-get_linked_framework_mcq_list_item_id}{\code{Signifiers$get_linked_framework_mcq_list_item_id()}}
\item \href{#method-Signifiers-get_linked_framework_mcq_list_item_id_list}{\code{Signifiers$get_linked_framework_mcq_list_item_id_list()}}
\item \href{#method-Signifiers-get_linked_framework_ids_by_type}{\code{Signifiers$get_linked_framework_ids_by_type()}}
\item \href{#method-Signifiers-get_linked_framework_triad_ids}{\code{Signifiers$get_linked_framework_triad_ids()}}
\item \href{#method-Signifiers-get_linked_framework_dyad_ids}{\code{Signifiers$get_linked_framework_dyad_ids()}}
\item \href{#method-Signifiers-get_linked_framework_list_ids}{\code{Signifiers$get_linked_framework_list_ids()}}
\item \href{#method-Signifiers-get_linked_framework_list_demographics_ids}{\code{Signifiers$get_linked_framework_list_demographics_ids()}}
\item \href{#method-Signifiers-get_linked_framework_stones_ids}{\code{Signifiers$get_linked_framework_stones_ids()}}
\item \href{#method-Signifiers-get_linked_framework_freetext_ids}{\code{Signifiers$get_linked_framework_freetext_ids()}}
\item \href{#method-Signifiers-get_linked_framework_imageselect_ids}{\code{Signifiers$get_linked_framework_imageselect_ids()}}
\item \href{#method-Signifiers-get_linked_framework_audio_ids}{\code{Signifiers$get_linked_framework_audio_ids()}}
\item \href{#method-Signifiers-get_linked_framework_photo_ids}{\code{Signifiers$get_linked_framework_photo_ids()}}
\item \href{#method-Signifiers-get_linked_framework_uniqueid_ids}{\code{Signifiers$get_linked_framework_uniqueid_ids()}}
\item \href{#method-Signifiers-get_linked_framework_type_by_signifierid}{\code{Signifiers$get_linked_framework_type_by_signifierid()}}
\item \href{#method-Signifiers-get_linked_framework_count_by_type}{\code{Signifiers$get_linked_framework_count_by_type()}}
\item \href{#method-Signifiers-get_linked_framework_used_signifier_types}{\code{Signifiers$get_linked_framework_used_signifier_types()}}
\item \href{#method-Signifiers-get_linked_single_select_list_ids}{\code{Signifiers$get_linked_single_select_list_ids()}}
\item \href{#method-Signifiers-get_linked_multi_select_list_ids}{\code{Signifiers$get_linked_multi_select_list_ids()}}
\item \href{#method-Signifiers-get_framework_for_id}{\code{Signifiers$get_framework_for_id()}}
\item \href{#method-Signifiers-get_list_count}{\code{Signifiers$get_list_count()}}
\item \href{#method-Signifiers-get_list_ids}{\code{Signifiers$get_list_ids()}}
\item \href{#method-Signifiers-get_list_titles}{\code{Signifiers$get_list_titles()}}
\item \href{#method-Signifiers-get_list_demographics_ids}{\code{Signifiers$get_list_demographics_ids()}}
\item \href{#method-Signifiers-get_multiselect_list_ids}{\code{Signifiers$get_multiselect_list_ids()}}
\item \href{#method-Signifiers-get_all_multiselect_list_column_names}{\code{Signifiers$get_all_multiselect_list_column_names()}}
\item \href{#method-Signifiers-get_list_max_responses}{\code{Signifiers$get_list_max_responses()}}
\item \href{#method-Signifiers-get_list_min_responses}{\code{Signifiers$get_list_min_responses()}}
\item \href{#method-Signifiers-get_list_num_items}{\code{Signifiers$get_list_num_items()}}
\item \href{#method-Signifiers-get_list_items_R6}{\code{Signifiers$get_list_items_R6()}}
\item \href{#method-Signifiers-get_list_items_ids}{\code{Signifiers$get_list_items_ids()}}
\item \href{#method-Signifiers-get_list_column_names}{\code{Signifiers$get_list_column_names()}}
\item \href{#method-Signifiers-get_list_na_column_name}{\code{Signifiers$get_list_na_column_name()}}
\item \href{#method-Signifiers-get_list_items_titles}{\code{Signifiers$get_list_items_titles()}}
\item \href{#method-Signifiers-get_list_items_concat_id_titles}{\code{Signifiers$get_list_items_concat_id_titles()}}
\item \href{#method-Signifiers-dedup_list_item_titles}{\code{Signifiers$dedup_list_item_titles()}}
\item \href{#method-Signifiers-get_list_items_mcq_list}{\code{Signifiers$get_list_items_mcq_list()}}
\item \href{#method-Signifiers-get_list_column_mcq_names}{\code{Signifiers$get_list_column_mcq_names()}}
\item \href{#method-Signifiers-get_list_item_id_with_other}{\code{Signifiers$get_list_item_id_with_other()}}
\item \href{#method-Signifiers-get_list_item_free_text_id_with_other}{\code{Signifiers$get_list_item_free_text_id_with_other()}}
\item \href{#method-Signifiers-get_list_item_R6}{\code{Signifiers$get_list_item_R6()}}
\item \href{#method-Signifiers-get_list_item_title}{\code{Signifiers$get_list_item_title()}}
\item \href{#method-Signifiers-get_list_items_title_by_id}{\code{Signifiers$get_list_items_title_by_id()}}
\item \href{#method-Signifiers-get_list_item_tooltip}{\code{Signifiers$get_list_item_tooltip()}}
\item \href{#method-Signifiers-get_list_item_visible}{\code{Signifiers$get_list_item_visible()}}
\item \href{#method-Signifiers-get_list_item_other_signifier_id}{\code{Signifiers$get_list_item_other_signifier_id()}}
\item \href{#method-Signifiers-get_list_item_image}{\code{Signifiers$get_list_item_image()}}
\item \href{#method-Signifiers-get_single_select_list_ids}{\code{Signifiers$get_single_select_list_ids()}}
\item \href{#method-Signifiers-get_list_other_ids}{\code{Signifiers$get_list_other_ids()}}
\item \href{#method-Signifiers-get_list_other_list_ids}{\code{Signifiers$get_list_other_list_ids()}}
\item \href{#method-Signifiers-get_list_ids_by_other}{\code{Signifiers$get_list_ids_by_other()}}
\item \href{#method-Signifiers-get_linked_fw_list}{\code{Signifiers$get_linked_fw_list()}}
\item \href{#method-Signifiers-update_list_content_property}{\code{Signifiers$update_list_content_property()}}
\item \href{#method-Signifiers-update_list_content_item_property}{\code{Signifiers$update_list_content_item_property()}}
\item \href{#method-Signifiers-update_list_content_item_title}{\code{Signifiers$update_list_content_item_title()}}
\item \href{#method-Signifiers-export_list_titles}{\code{Signifiers$export_list_titles()}}
\item \href{#method-Signifiers-import_list_titles}{\code{Signifiers$import_list_titles()}}
\item \href{#method-Signifiers-get_triad_count}{\code{Signifiers$get_triad_count()}}
\item \href{#method-Signifiers-get_triad_ids}{\code{Signifiers$get_triad_ids()}}
\item \href{#method-Signifiers-get_triad_labels_R6}{\code{Signifiers$get_triad_labels_R6()}}
\item \href{#method-Signifiers-get_triad_pointer_image}{\code{Signifiers$get_triad_pointer_image()}}
\item \href{#method-Signifiers-get_triad_background_image}{\code{Signifiers$get_triad_background_image()}}
\item \href{#method-Signifiers-get_triad_anchor_ids}{\code{Signifiers$get_triad_anchor_ids()}}
\item \href{#method-Signifiers-get_triad_anchor_texts}{\code{Signifiers$get_triad_anchor_texts()}}
\item \href{#method-Signifiers-get_triad_anchor_by_id_R6}{\code{Signifiers$get_triad_anchor_by_id_R6()}}
\item \href{#method-Signifiers-get_triad_anchor_R6}{\code{Signifiers$get_triad_anchor_R6()}}
\item \href{#method-Signifiers-get_triad_anchor_id}{\code{Signifiers$get_triad_anchor_id()}}
\item \href{#method-Signifiers-get_triad_left_anchor_R6}{\code{Signifiers$get_triad_left_anchor_R6()}}
\item \href{#method-Signifiers-get_triad_top_anchor_R6}{\code{Signifiers$get_triad_top_anchor_R6()}}
\item \href{#method-Signifiers-get_triad_right_anchor_R6}{\code{Signifiers$get_triad_right_anchor_R6()}}
\item \href{#method-Signifiers-get_triad_anchor_text_by_id}{\code{Signifiers$get_triad_anchor_text_by_id()}}
\item \href{#method-Signifiers-get_triad_anchor_show_image_by_id}{\code{Signifiers$get_triad_anchor_show_image_by_id()}}
\item \href{#method-Signifiers-get_triad_anchor_image_by_id}{\code{Signifiers$get_triad_anchor_image_by_id()}}
\item \href{#method-Signifiers-get_triad_anchor_show_label_by_id}{\code{Signifiers$get_triad_anchor_show_label_by_id()}}
\item \href{#method-Signifiers-get_triad_anchor_text_by_anchor}{\code{Signifiers$get_triad_anchor_text_by_anchor()}}
\item \href{#method-Signifiers-get_triad_anchor_show_image_by_anchor}{\code{Signifiers$get_triad_anchor_show_image_by_anchor()}}
\item \href{#method-Signifiers-get_triad_anchor_image_by_anchor}{\code{Signifiers$get_triad_anchor_image_by_anchor()}}
\item \href{#method-Signifiers-get_triad_anchor_show_label_by_anchor}{\code{Signifiers$get_triad_anchor_show_label_by_anchor()}}
\item \href{#method-Signifiers-get_triad_top_anchor_text}{\code{Signifiers$get_triad_top_anchor_text()}}
\item \href{#method-Signifiers-get_triad_top_anchor_show_image}{\code{Signifiers$get_triad_top_anchor_show_image()}}
\item \href{#method-Signifiers-get_triad_top_anchor_image}{\code{Signifiers$get_triad_top_anchor_image()}}
\item \href{#method-Signifiers-get_triad_top_anchor_show_label}{\code{Signifiers$get_triad_top_anchor_show_label()}}
\item \href{#method-Signifiers-get_triad_left_anchor_text}{\code{Signifiers$get_triad_left_anchor_text()}}
\item \href{#method-Signifiers-get_triad_left_anchor_show_image}{\code{Signifiers$get_triad_left_anchor_show_image()}}
\item \href{#method-Signifiers-get_triad_left_anchor_image}{\code{Signifiers$get_triad_left_anchor_image()}}
\item \href{#method-Signifiers-get_triad_left_anchor_show_label}{\code{Signifiers$get_triad_left_anchor_show_label()}}
\item \href{#method-Signifiers-get_triad_right_anchor_text}{\code{Signifiers$get_triad_right_anchor_text()}}
\item \href{#method-Signifiers-get_triad_right_anchor_show_image}{\code{Signifiers$get_triad_right_anchor_show_image()}}
\item \href{#method-Signifiers-get_triad_right_anchor_image}{\code{Signifiers$get_triad_right_anchor_image()}}
\item \href{#method-Signifiers-get_triad_right_anchor_show_label}{\code{Signifiers$get_triad_right_anchor_show_label()}}
\item \href{#method-Signifiers-get_triad_top_anchor_id}{\code{Signifiers$get_triad_top_anchor_id()}}
\item \href{#method-Signifiers-get_triad_left_anchor_id}{\code{Signifiers$get_triad_left_anchor_id()}}
\item \href{#method-Signifiers-get_triad_right_anchor_id}{\code{Signifiers$get_triad_right_anchor_id()}}
\item \href{#method-Signifiers-get_triad_column_name}{\code{Signifiers$get_triad_column_name()}}
\item \href{#method-Signifiers-get_triad_x_column_name}{\code{Signifiers$get_triad_x_column_name()}}
\item \href{#method-Signifiers-get_triad_y_column_name}{\code{Signifiers$get_triad_y_column_name()}}
\item \href{#method-Signifiers-get_triad_x_y_column_names}{\code{Signifiers$get_triad_x_y_column_names()}}
\item \href{#method-Signifiers-get_triad_top_column_name}{\code{Signifiers$get_triad_top_column_name()}}
\item \href{#method-Signifiers-get_triad_left_column_name}{\code{Signifiers$get_triad_left_column_name()}}
\item \href{#method-Signifiers-get_triad_right_column_name}{\code{Signifiers$get_triad_right_column_name()}}
\item \href{#method-Signifiers-get_triad_na_column_name}{\code{Signifiers$get_triad_na_column_name()}}
\item \href{#method-Signifiers-get_triad_compositional_column_names}{\code{Signifiers$get_triad_compositional_column_names()}}
\item \href{#method-Signifiers-get_triad_anchor_column_names}{\code{Signifiers$get_triad_anchor_column_names()}}
\item \href{#method-Signifiers-get_triad_all_column_names}{\code{Signifiers$get_triad_all_column_names()}}
\item \href{#method-Signifiers-get_triad_zone_table_headers}{\code{Signifiers$get_triad_zone_table_headers()}}
\item \href{#method-Signifiers-get_triad_zone_names}{\code{Signifiers$get_triad_zone_names()}}
\item \href{#method-Signifiers-get_triad_zone_name}{\code{Signifiers$get_triad_zone_name()}}
\item \href{#method-Signifiers-update_triad_top_label_value}{\code{Signifiers$update_triad_top_label_value()}}
\item \href{#method-Signifiers-update_triad_left_label_value}{\code{Signifiers$update_triad_left_label_value()}}
\item \href{#method-Signifiers-update_triad_right_label_value}{\code{Signifiers$update_triad_right_label_value()}}
\item \href{#method-Signifiers-export_triad_titles}{\code{Signifiers$export_triad_titles()}}
\item \href{#method-Signifiers-import_triad_titles}{\code{Signifiers$import_triad_titles()}}
\item \href{#method-Signifiers-get_dyad_count}{\code{Signifiers$get_dyad_count()}}
\item \href{#method-Signifiers-get_dyad_ids}{\code{Signifiers$get_dyad_ids()}}
\item \href{#method-Signifiers-get_dyad_labels_R6}{\code{Signifiers$get_dyad_labels_R6()}}
\item \href{#method-Signifiers-get_dyad_pointer_image}{\code{Signifiers$get_dyad_pointer_image()}}
\item \href{#method-Signifiers-get_dyad_background_image}{\code{Signifiers$get_dyad_background_image()}}
\item \href{#method-Signifiers-get_dyad_anchor_ids}{\code{Signifiers$get_dyad_anchor_ids()}}
\item \href{#method-Signifiers-get_dyad_anchor_texts}{\code{Signifiers$get_dyad_anchor_texts()}}
\item \href{#method-Signifiers-get_dyad_anchor_id}{\code{Signifiers$get_dyad_anchor_id()}}
\item \href{#method-Signifiers-get_dyad_anchor_by_id_R6}{\code{Signifiers$get_dyad_anchor_by_id_R6()}}
\item \href{#method-Signifiers-get_dyad_anchor_R6}{\code{Signifiers$get_dyad_anchor_R6()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_R6}{\code{Signifiers$get_dyad_left_anchor_R6()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_R6}{\code{Signifiers$get_dyad_right_anchor_R6()}}
\item \href{#method-Signifiers-get_dyad_anchor_text_by_id}{\code{Signifiers$get_dyad_anchor_text_by_id()}}
\item \href{#method-Signifiers-get_dyad_anchor_show_image_by_id}{\code{Signifiers$get_dyad_anchor_show_image_by_id()}}
\item \href{#method-Signifiers-get_dyad_anchor_image_by_id}{\code{Signifiers$get_dyad_anchor_image_by_id()}}
\item \href{#method-Signifiers-get_dyad_anchor_show_label_by_id}{\code{Signifiers$get_dyad_anchor_show_label_by_id()}}
\item \href{#method-Signifiers-get_dyad_anchor_text_by_anchor}{\code{Signifiers$get_dyad_anchor_text_by_anchor()}}
\item \href{#method-Signifiers-get_dyad_anchor_show_image_by_anchor}{\code{Signifiers$get_dyad_anchor_show_image_by_anchor()}}
\item \href{#method-Signifiers-get_dyad_anchor_image_by_anchor}{\code{Signifiers$get_dyad_anchor_image_by_anchor()}}
\item \href{#method-Signifiers-get_dyad_anchor_show_label_by_anchor}{\code{Signifiers$get_dyad_anchor_show_label_by_anchor()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_text}{\code{Signifiers$get_dyad_left_anchor_text()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_show_image}{\code{Signifiers$get_dyad_left_anchor_show_image()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_image}{\code{Signifiers$get_dyad_left_anchor_image()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_show_label}{\code{Signifiers$get_dyad_left_anchor_show_label()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_text}{\code{Signifiers$get_dyad_right_anchor_text()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_show_image}{\code{Signifiers$get_dyad_right_anchor_show_image()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_image}{\code{Signifiers$get_dyad_right_anchor_image()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_show_label}{\code{Signifiers$get_dyad_right_anchor_show_label()}}
\item \href{#method-Signifiers-get_dyad_left_anchor_id}{\code{Signifiers$get_dyad_left_anchor_id()}}
\item \href{#method-Signifiers-get_dyad_right_anchor_id}{\code{Signifiers$get_dyad_right_anchor_id()}}
\item \href{#method-Signifiers-get_dyad_all_anchor_ids}{\code{Signifiers$get_dyad_all_anchor_ids()}}
\item \href{#method-Signifiers-get_dyad_column_name}{\code{Signifiers$get_dyad_column_name()}}
\item \href{#method-Signifiers-get_dyad_x_column_name}{\code{Signifiers$get_dyad_x_column_name()}}
\item \href{#method-Signifiers-get_dyad_left_column_name}{\code{Signifiers$get_dyad_left_column_name()}}
\item \href{#method-Signifiers-get_dyad_right_column_name}{\code{Signifiers$get_dyad_right_column_name()}}
\item \href{#method-Signifiers-get_dyad_na_column_name}{\code{Signifiers$get_dyad_na_column_name()}}
\item \href{#method-Signifiers-get_dyad_aspercent_x_column_name}{\code{Signifiers$get_dyad_aspercent_x_column_name()}}
\item \href{#method-Signifiers-get_dyad_compositional_column_names}{\code{Signifiers$get_dyad_compositional_column_names()}}
\item \href{#method-Signifiers-get_dyad_anchor_column_names}{\code{Signifiers$get_dyad_anchor_column_names()}}
\item \href{#method-Signifiers-get_dyad_all_column_names}{\code{Signifiers$get_dyad_all_column_names()}}
\item \href{#method-Signifiers-get_dyad_zone_table_headers}{\code{Signifiers$get_dyad_zone_table_headers()}}
\item \href{#method-Signifiers-get_dyad_zone_names}{\code{Signifiers$get_dyad_zone_names()}}
\item \href{#method-Signifiers-get_dyad_zone_name}{\code{Signifiers$get_dyad_zone_name()}}
\item \href{#method-Signifiers-update_dyad_left_label_value}{\code{Signifiers$update_dyad_left_label_value()}}
\item \href{#method-Signifiers-update_dyad_right_label_value}{\code{Signifiers$update_dyad_right_label_value()}}
\item \href{#method-Signifiers-export_dyad_titles}{\code{Signifiers$export_dyad_titles()}}
\item \href{#method-Signifiers-import_dyad_titles}{\code{Signifiers$import_dyad_titles()}}
\item \href{#method-Signifiers-get_stones_count}{\code{Signifiers$get_stones_count()}}
\item \href{#method-Signifiers-get_stones_ids}{\code{Signifiers$get_stones_ids()}}
\item \href{#method-Signifiers-get_stones_na_column_name}{\code{Signifiers$get_stones_na_column_name()}}
\item \href{#method-Signifiers-get_stones_background_image}{\code{Signifiers$get_stones_background_image()}}
\item \href{#method-Signifiers-get_stones_axis_R6}{\code{Signifiers$get_stones_axis_R6()}}
\item \href{#method-Signifiers-get_stones_axis_by_axis_R6}{\code{Signifiers$get_stones_axis_by_axis_R6()}}
\item \href{#method-Signifiers-get_stones_x_axis_R6}{\code{Signifiers$get_stones_x_axis_R6()}}
\item \href{#method-Signifiers-get_stones_y_axis_R6}{\code{Signifiers$get_stones_y_axis_R6()}}
\item \href{#method-Signifiers-get_stones_axis_name_by_axis}{\code{Signifiers$get_stones_axis_name_by_axis()}}
\item \href{#method-Signifiers-get_stones_axis_end_label_by_axis}{\code{Signifiers$get_stones_axis_end_label_by_axis()}}
\item \href{#method-Signifiers-get_stones_axis_start_label_by_axis}{\code{Signifiers$get_stones_axis_start_label_by_axis()}}
\item \href{#method-Signifiers-get_stones_xaxis_name}{\code{Signifiers$get_stones_xaxis_name()}}
\item \href{#method-Signifiers-get_stones_xaxis_end_label}{\code{Signifiers$get_stones_xaxis_end_label()}}
\item \href{#method-Signifiers-get_stones_xaxis_start_label}{\code{Signifiers$get_stones_xaxis_start_label()}}
\item \href{#method-Signifiers-get_stones_yaxis_name}{\code{Signifiers$get_stones_yaxis_name()}}
\item \href{#method-Signifiers-get_stones_yaxis_end_label}{\code{Signifiers$get_stones_yaxis_end_label()}}
\item \href{#method-Signifiers-get_stones_yaxis_start_label}{\code{Signifiers$get_stones_yaxis_start_label()}}
\item \href{#method-Signifiers-get_stones_stones_R6}{\code{Signifiers$get_stones_stones_R6()}}
\item \href{#method-Signifiers-get_stones_items_ids}{\code{Signifiers$get_stones_items_ids()}}
\item \href{#method-Signifiers-get_stones_stone_titles}{\code{Signifiers$get_stones_stone_titles()}}
\item \href{#method-Signifiers-get_stones_stone_ids}{\code{Signifiers$get_stones_stone_ids()}}
\item \href{#method-Signifiers-get_stones_num_items}{\code{Signifiers$get_stones_num_items()}}
\item \href{#method-Signifiers-get_stones_items_property}{\code{Signifiers$get_stones_items_property()}}
\item \href{#method-Signifiers-get_stones_items_title}{\code{Signifiers$get_stones_items_title()}}
\item \href{#method-Signifiers-get_stones_stone_by_id_R6}{\code{Signifiers$get_stones_stone_by_id_R6()}}
\item \href{#method-Signifiers-get_stones_stone_title_by_id}{\code{Signifiers$get_stones_stone_title_by_id()}}
\item \href{#method-Signifiers-get_stones_stone_tooltip_by_id}{\code{Signifiers$get_stones_stone_tooltip_by_id()}}
\item \href{#method-Signifiers-get_stones_stone_image_by_id}{\code{Signifiers$get_stones_stone_image_by_id()}}
\item \href{#method-Signifiers-get_stones_stone_visible_by_id}{\code{Signifiers$get_stones_stone_visible_by_id()}}
\item \href{#method-Signifiers-get_stones_compositional_column_names}{\code{Signifiers$get_stones_compositional_column_names()}}
\item \href{#method-Signifiers-get_stones_stone_compositional_column_names}{\code{Signifiers$get_stones_stone_compositional_column_names()}}
\item \href{#method-Signifiers-get_stones_stone_title_by_zone_column_id}{\code{Signifiers$get_stones_stone_title_by_zone_column_id()}}
\item \href{#method-Signifiers-get_split_ids_by_zone_column_id}{\code{Signifiers$get_split_ids_by_zone_column_id()}}
\item \href{#method-Signifiers-get_stones_stone_zone_table_headers}{\code{Signifiers$get_stones_stone_zone_table_headers()}}
\item \href{#method-Signifiers-get_stones_stone_zone_x_table_headers}{\code{Signifiers$get_stones_stone_zone_x_table_headers()}}
\item \href{#method-Signifiers-get_stones_stone_zone_y_table_headers}{\code{Signifiers$get_stones_stone_zone_y_table_headers()}}
\item \href{#method-Signifiers-get_stones_stone_zone_4_table_headers}{\code{Signifiers$get_stones_stone_zone_4_table_headers()}}
\item \href{#method-Signifiers-get_stones_stone_zone_9_table_headers}{\code{Signifiers$get_stones_stone_zone_9_table_headers()}}
\item \href{#method-Signifiers-get_stones_zone_types}{\code{Signifiers$get_stones_zone_types()}}
\item \href{#method-Signifiers-get_stones_zone_name_by_type}{\code{Signifiers$get_stones_zone_name_by_type()}}
\item \href{#method-Signifiers-get_stones_zone_names_by_type}{\code{Signifiers$get_stones_zone_names_by_type()}}
\item \href{#method-Signifiers-get_stones_stone_x_zone_name}{\code{Signifiers$get_stones_stone_x_zone_name()}}
\item \href{#method-Signifiers-get_stones_x_zone_names}{\code{Signifiers$get_stones_x_zone_names()}}
\item \href{#method-Signifiers-get_stones_stone_y_zone_name}{\code{Signifiers$get_stones_stone_y_zone_name()}}
\item \href{#method-Signifiers-get_stones_y_zone_names}{\code{Signifiers$get_stones_y_zone_names()}}
\item \href{#method-Signifiers-get_stones_stone_4_zone_name}{\code{Signifiers$get_stones_stone_4_zone_name()}}
\item \href{#method-Signifiers-get_stones_4_zone_names}{\code{Signifiers$get_stones_4_zone_names()}}
\item \href{#method-Signifiers-get_stones_stone_9_zone_name}{\code{Signifiers$get_stones_stone_9_zone_name()}}
\item \href{#method-Signifiers-get_stones_9_zone_names}{\code{Signifiers$get_stones_9_zone_names()}}
\item \href{#method-Signifiers-Update_stones_axis_property}{\code{Signifiers$Update_stones_axis_property()}}
\item \href{#method-Signifiers-Update_stones_x_axis_property}{\code{Signifiers$Update_stones_x_axis_property()}}
\item \href{#method-Signifiers-Update_stones_y_axis_property}{\code{Signifiers$Update_stones_y_axis_property()}}
\item \href{#method-Signifiers-Update_stones_stone_property}{\code{Signifiers$Update_stones_stone_property()}}
\item \href{#method-Signifiers-export_stones_titles}{\code{Signifiers$export_stones_titles()}}
\item \href{#method-Signifiers-import_stones_titles}{\code{Signifiers$import_stones_titles()}}
\item \href{#method-Signifiers-get_freetext_count}{\code{Signifiers$get_freetext_count()}}
\item \href{#method-Signifiers-get_freetext_ids}{\code{Signifiers$get_freetext_ids()}}
\item \href{#method-Signifiers-get_freetext_fragments}{\code{Signifiers$get_freetext_fragments()}}
\item \href{#method-Signifiers-get_freetext_default}{\code{Signifiers$get_freetext_default()}}
\item \href{#method-Signifiers-get_freetext_multiline}{\code{Signifiers$get_freetext_multiline()}}
\item \href{#method-Signifiers-export_freetext_titles}{\code{Signifiers$export_freetext_titles()}}
\item \href{#method-Signifiers-import_freetext_titles}{\code{Signifiers$import_freetext_titles()}}
\item \href{#method-Signifiers-get_imageselect_count}{\code{Signifiers$get_imageselect_count()}}
\item \href{#method-Signifiers-get_imageselect_ids}{\code{Signifiers$get_imageselect_ids()}}
\item \href{#method-Signifiers-get_imageselect_items}{\code{Signifiers$get_imageselect_items()}}
\item \href{#method-Signifiers-get_imageselect_items_titles}{\code{Signifiers$get_imageselect_items_titles()}}
\item \href{#method-Signifiers-get_imageselect_item_title}{\code{Signifiers$get_imageselect_item_title()}}
\item \href{#method-Signifiers-get_photo_count}{\code{Signifiers$get_photo_count()}}
\item \href{#method-Signifiers-get_photo_ids}{\code{Signifiers$get_photo_ids()}}
\item \href{#method-Signifiers-get_audio_count}{\code{Signifiers$get_audio_count()}}
\item \href{#method-Signifiers-get_audio_ids}{\code{Signifiers$get_audio_ids()}}
\item \href{#method-Signifiers-get_uniqueid_count}{\code{Signifiers$get_uniqueid_count()}}
\item \href{#method-Signifiers-get_uniqueid_ids}{\code{Signifiers$get_uniqueid_ids()}}
\item \href{#method-Signifiers-is_polymorphic}{\code{Signifiers$is_polymorphic()}}
\item \href{#method-Signifiers-has_polymorphic_anchor_modification}{\code{Signifiers$has_polymorphic_anchor_modification()}}
\item \href{#method-Signifiers-get_poly_sig_ids}{\code{Signifiers$get_poly_sig_ids()}}
\item \href{#method-Signifiers-get_poly_sig_ids_with_types}{\code{Signifiers$get_poly_sig_ids_with_types()}}
\item \href{#method-Signifiers-get_poly_sig_ids_for_type}{\code{Signifiers$get_poly_sig_ids_for_type()}}
\item \href{#method-Signifiers-get_poly_anchor_modification_ids}{\code{Signifiers$get_poly_anchor_modification_ids()}}
\item \href{#method-Signifiers-get_poly_anchor_modification_ids_with_type}{\code{Signifiers$get_poly_anchor_modification_ids_with_type()}}
\item \href{#method-Signifiers-get_poly_modification_sig_id}{\code{Signifiers$get_poly_modification_sig_id()}}
\item \href{#method-Signifiers-get_poly_overlay_id}{\code{Signifiers$get_poly_overlay_id()}}
\item \href{#method-Signifiers-get_poly_type_by_id}{\code{Signifiers$get_poly_type_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_ids}{\code{Signifiers$get_poly_sig_to_ids()}}
\item \href{#method-Signifiers-get_poly_id_by_poly_to_id}{\code{Signifiers$get_poly_id_by_poly_to_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_by_id}{\code{Signifiers$get_poly_sig_to_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_cols_by_id}{\code{Signifiers$get_poly_sig_to_cols_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_top_by_id}{\code{Signifiers$get_poly_sig_to_top_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_left_by_id}{\code{Signifiers$get_poly_sig_to_left_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_right_by_id}{\code{Signifiers$get_poly_sig_to_right_by_id()}}
\item \href{#method-Signifiers-get_poly_sig_to_anchor_by_id}{\code{Signifiers$get_poly_sig_to_anchor_by_id()}}
\item \href{#method-Signifiers-get_poly_anchor_modifications}{\code{Signifiers$get_poly_anchor_modifications()}}
\item \href{#method-Signifiers-get_poly_sig_id}{\code{Signifiers$get_poly_sig_id()}}
\item \href{#method-Signifiers-add_freetext}{\code{Signifiers$add_freetext()}}
\item \href{#method-Signifiers-add_imageselect}{\code{Signifiers$add_imageselect()}}
\item \href{#method-Signifiers-add_audio}{\code{Signifiers$add_audio()}}
\item \href{#method-Signifiers-add_photo}{\code{Signifiers$add_photo()}}
\item \href{#method-Signifiers-add_list}{\code{Signifiers$add_list()}}
\item \href{#method-Signifiers-add_triad}{\code{Signifiers$add_triad()}}
\item \href{#method-Signifiers-add_dyad}{\code{Signifiers$add_dyad()}}
\item \href{#method-Signifiers-add_stones}{\code{Signifiers$add_stones()}}
\item \href{#method-Signifiers-add_uniqueid}{\code{Signifiers$add_uniqueid()}}
\item \href{#method-Signifiers-add_polymorphic_signifiers}{\code{Signifiers$add_polymorphic_signifiers()}}
\item \href{#method-Signifiers-generate_shiny_tree_objects}{\code{Signifiers$generate_shiny_tree_objects()}}
\item \href{#method-Signifiers-clone}{\code{Signifiers$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-new"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-new}{}}}
\subsection{Method \code{new()}}{
Create a new `signifiers` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$new(
  jsonfilename = NULL,
  layoutfilename = NULL,
  parsedjson = NULL,
  parsedlayout = NULL,
  workbenchid = NULL,
  token = NULL,
  poly_data = NULL,
  poly_data_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{jsonfilename}}{if using a json file stored locally, the path and file name of the json file to load.}

\item{\code{layoutfilename}}{if using a json file stored locally, the path and file name of the layout json file to load.}

\item{\code{parsedjson}}{if using a json file previously loaded and parsed, the parsed file.}

\item{\code{parsedlayout}}{if using a json layout file previously loaded and parsed, the parsed file.}

\item{\code{workbenchid}}{if using the platform security, the id for the workbench/dashboard.}

\item{\code{token}}{if using the platform securithy, the token to gain access to the json definition.}

\item{\code{poly_data}}{json data containing poly data definitions. Default NULL, none supplied.}

\item{\code{poly_data_file}}{Name of a json file containing the poly data definitions. Default NULL, none supplied}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The json file is parsed into various data structures returned as a set of R6 classes. Package methods provide the R
programmer with a toolset to work with the SenseMaker® framework capture data.
}

\subsection{Returns}{
A new `signifier` R6 class object and fields type by signifier id, signifier ids by type, and
          types with signifiers.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-flatten_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-flatten_list}{}}}
\subsection{Method \code{flatten_list()}}{
Flatten a list of lists to a single list (removing the top elements (note will do list of list of list)). This is a general helper function that will be moved to the generic helper package.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$flatten_list(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The list of lists to flatten.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of the lowest level list elements
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_a_col_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_a_col_name}{}}}
\subsection{Method \code{get_a_col_name()}}{
Get a csv column name for a signifier ID
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_a_col_name(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The signifier ID.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of the lowest level list elements - this helper function is used to check any one column for a signifier to see
 whether any blanks/NAs etc.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_col_names_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_col_names_ids}{}}}
\subsection{Method \code{get_col_names_ids()}}{
Get The column names for a vector of signifier ids.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_col_names_ids(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{A vector of signifier ids.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_col_names_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_col_names_titles}{}}}
\subsection{Method \code{get_col_names_titles()}}{
Get The column names for a vector of signifier ids.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_col_names_titles(x, selected_and_zones = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{A vector of signifier ids.}

\item{\code{selected_and_zones}}{- Default TRUE, use the zone and selected column names otherwise the original data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_a_signifier_content_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_a_signifier_content_name}{}}}
\subsection{Method \code{get_a_signifier_content_name()}}{
Get a signifier content title/name - so either a list item title, stones stone title, triad/dyad anchor title.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_a_signifier_content_name(sig_id, content_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier ID.}

\item{\code{content_id}}{The content ID}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-call_a_method"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-call_a_method}{}}}
\subsection{Method \code{call_a_method()}}{
call any one of the methods here with passed parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$call_a_method(tmethod, tparams = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tmethod}}{Character, the method name to call.}

\item{\code{tparams}}{The parameters to pass to the method. Default NULL, default or no parameters}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The result of the method call.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_framework_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_framework_ids}{}}}
\subsection{Method \code{get_framework_ids()}}{
Get all framework ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_framework_ids(include_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{TRUE to return list that includes the framework names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of framework ids or list of ids including names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_used_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_used_signifier_types}{}}}
\subsection{Method \code{get_used_signifier_types()}}{
Get the signifier types used within the passed framework definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_used_signifier_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of the signifier types used within the passed framework definition.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_supported_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_supported_signifier_types}{}}}
\subsection{Method \code{get_supported_signifier_types()}}{
Get the supported signifier types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_supported_signifier_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of the suported signifier types.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_supported_signifier_classes"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_supported_signifier_classes}{}}}
\subsection{Method \code{get_supported_signifier_classes()}}{
Get the supported signifier classes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_supported_signifier_classes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_shape_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_shape_signifier_types}{}}}
\subsection{Method \code{get_shape_signifier_types()}}{
Get the supported signifier classes


Get the shape signifier types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_shape_signifier_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of the suported signifier classes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_shape_used_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_shape_used_signifier_types}{}}}
\subsection{Method \code{get_shape_used_signifier_types()}}{
Get the used shape signifier types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_shape_used_signifier_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of the shape signifier types in use.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_chat_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_chat_signifier_types}{}}}
\subsection{Method \code{get_chat_signifier_types()}}{
Get the cg=hat signifier types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_chat_signifier_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of the chat signifier types.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_language"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_language}{}}}
\subsection{Method \code{get_parent_language()}}{
Get the parent definition language
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_language()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The parent language.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_all_signifier_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_all_signifier_ids}{}}}
\subsection{Method \code{get_all_signifier_ids()}}{
Get all the signifier ids contained in the framework definition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_all_signifier_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{- Default FALSE - return all otherwise only those that are included.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include, values in get_supported_signifier_classes() function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of all signifier ids contained in the framework definition.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_all_signifier_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_all_signifier_titles}{}}}
\subsection{Method \code{get_all_signifier_titles()}}{
Get all the signifier titles contained in the framework definition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_all_signifier_titles(
  ids_as_names = FALSE,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids_as_names}}{Return as a list whose names will be the signifier ids.}

\item{\code{keep_only_include}}{- Default FALSE - return all otherwise only those that are included.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include, found in get_supported_signifier_classes() function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of all signifier names contained in the framework definition (optional with passed keep only and class) and with ids as names if requested.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_all_signifier_titles_df"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_all_signifier_titles_df}{}}}
\subsection{Method \code{get_all_signifier_titles_df()}}{
Get all the signifier titles contained in the framework definition as a dataframe.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_all_signifier_titles_df(
  also_as_csv = FALSE,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{also_as_csv}}{Also export results as a csv file.}

\item{\code{keep_only_include}}{- Default FALSE - return all otherwise only those that are included.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include, values found in get_supported_signifier_classes() function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataf rame of all signifier names contained in the framework definition (optional with passed keep only and class) and with ids as names if requested.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_ids_layout_order"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_ids_layout_order}{}}}
\subsection{Method \code{get_signifier_ids_layout_order()}}{
Get all the signifier ids contained in the framework definition in framework layout order.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_ids_layout_order(
  keep_only_include = FALSE,
  also_as_csv = FALSE,
  include_type_title = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{also_as_csv}}{- Default FALSE - Also export as a csv file.}

\item{\code{include_type_title}}{- Include the signifier type and title in the output}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe of all signifier ids contained in the framework definition in framework layout order with optional inclusion of signifier id and title and export as csv.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_all_signifiers_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_all_signifiers_list}{}}}
\subsection{Method \code{get_all_signifiers_list()}}{
Get all the signifier ids for a type and signifier titles as titles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_all_signifiers_list(
  type = NULL,
  include_headers = TRUE,
  only_headers = FALSE,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{Signifier type ("list", "triad" etc) default NULL all types}

\item{\code{include_headers}}{Boolean, default TRUE, headers containing signifier titles included.}

\item{\code{only_headers}}{Boolean, default FALSE, if TRUE only signifier names returned.}

\item{\code{keep_only_include}}{Boolean, default FALSE, if TRUE, include only those flagged as keep TRUE.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include, values found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of all signifier ids with signifier titles as titles.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_ids_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_ids_by_type}{}}}
\subsection{Method \code{get_signifier_ids_by_type()}}{
Get the framework signifier ids for a given signifier type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_ids_by_type(
  type = NULL,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The signifier type.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include, values found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the signifier ids in the framework definition for the passed type.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_concat_ids_title_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_concat_ids_title_by_type}{}}}
\subsection{Method \code{get_signifier_concat_ids_title_by_type()}}{
Get a concatenated string of signifier id and signifier title for a type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_concat_ids_title_by_type(
  type,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The signifier type.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the concatenated string of signifier id and signifier title for the passed type.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_content_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_content_titles}{}}}
\subsection{Method \code{change_signifier_content_titles()}}{
Change triad/dyad/list/stones content titles for multiple signifiers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_content_titles(title_file = NULL, title_df = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title_file}}{- default NULL. File from the export_content_titles export - so must have at least sig_id, content_id and update_title as columns.}

\item{\code{title_df}}{- default NULL. An already preloaded df of the export_content_titles export file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_content_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_content_title}{}}}
\subsection{Method \code{change_signifier_content_title()}}{
change triad/dyad/list/stones content title
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_content_title(sig_id, content_id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{- triad/dyad/list or stones id to change}

\item{\code{content_id}}{- triad/dyad label id to update or list item id or stones stone id to update}

\item{\code{value}}{- new value to apply update}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_supported_header_properties"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_supported_header_properties}{}}}
\subsection{Method \code{get_signifier_supported_header_properties()}}{
Get signifier header supported properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_supported_header_properties()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of signifier header supported properties.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_na_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_na_column_name}{}}}
\subsection{Method \code{get_signifier_na_column_name()}}{
Get signifier na column name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_na_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- the signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Column name for the signifier NA column.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_count_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_count_by_type}{}}}
\subsection{Method \code{get_signifier_count_by_type()}}{
Get the number of signifiers (count) for a signifier type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_count_by_type(
  type,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The signifier type.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of signifiers defined for the type.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_type_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_type_by_id}{}}}
\subsection{Method \code{get_signifier_type_by_id()}}{
Get the signifier type belonging to a signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_type_by_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string containing the type of the passed signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_by_id_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_by_id_R6}{}}}
\subsection{Method \code{get_signifier_by_id_R6()}}{
Get the signifier R6 class for the passed signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_by_id_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The R6 class for the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_property}{}}}
\subsection{Method \code{get_signifier_property()}}{
Get the signifier property for the passed in signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_property(id, property)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}

\item{\code{property}}{The property to retrieve ("title"    "tooltip"  "allow_na" "fragment" "required" "sticky"   "include"  "hide")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string with the title of the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_title}{}}}
\subsection{Method \code{get_signifier_title()}}{
Get the signifier title for the passed in signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_title(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string with the title of the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_tooltip"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_tooltip}{}}}
\subsection{Method \code{get_signifier_tooltip()}}{
Get the signifier tooltip for the passed in signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_tooltip(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string with the tooltip of the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_type}{}}}
\subsection{Method \code{get_signifier_type()}}{
Get the signifier type of the passed in signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_type(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string with the type of the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_allow_na"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_allow_na}{}}}
\subsection{Method \code{get_signifier_allow_na()}}{
Get the allow N/a property of the passed in signifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_allow_na(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the framework allows the N/A selected for the passed in signifier id, FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_fragment"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_fragment}{}}}
\subsection{Method \code{get_signifier_fragment()}}{
Get the allow is fragment property of the passed in signifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_fragment(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the passed in signifier id is a fragment, FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_required"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_required}{}}}
\subsection{Method \code{get_signifier_required()}}{
Get the is required property of the passed in signifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_required(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE is the passed in signifier id is a mandatory entry for the respondent, FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_sticky"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_sticky}{}}}
\subsection{Method \code{get_signifier_sticky()}}{
Get the is sticky property of the passed in signifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_sticky(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE is the passed in signifier id is a demographic one (sticky), FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_content_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_content_R6}{}}}
\subsection{Method \code{get_signifier_content_R6()}}{
Get the framework definition content R6 class for the passed signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_content_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The R6 class for the content portion of the passed in signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_class"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_class}{}}}
\subsection{Method \code{get_signifier_class()}}{
Get signifier class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_class(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the passed in signifier id is currently used in collector capture, FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_include"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_include}{}}}
\subsection{Method \code{get_signifier_include()}}{
Get whether the signifier is currently included in the capture using this framework definition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_include(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id whose type to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the passed in signifier id is currently used in collector capture, FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_hide"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_hide}{}}}
\subsection{Method \code{get_signifier_hide()}}{
Get whether the signifier is hidden for analytical purposes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_hide(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the signifier is to be hidden from this analytical session.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_user_data_entry"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_user_data_entry}{}}}
\subsection{Method \code{get_signifier_user_data_entry()}}{
Get a user data entry for this signifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_user_data_entry(id, entry)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}

\item{\code{entry}}{The entry id for the user data (created by the user)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-set_signifier_user_data_entry"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-set_signifier_user_data_entry}{}}}
\subsection{Method \code{set_signifier_user_data_entry()}}{
Set a user data entry for this signifier. This enables a programmer to set any data structure against
 a signifier id to retrieve at a later point.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$set_signifier_user_data_entry(id, entry)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}

\item{\code{entry}}{The entry id for the user data (created by the user)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_is_polymorphic"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_is_polymorphic}{}}}
\subsection{Method \code{get_signifier_is_polymorphic()}}{
Get whether the signifier is polymorphic.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_is_polymorphic(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the signifier is to be hidden from this analytical session.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_is_poly_transformed"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_is_poly_transformed}{}}}
\subsection{Method \code{get_signifier_is_poly_transformed()}}{
Get whether the signifier is polymorphic transformed one.
If true then this is a copy of another triad or dyad with the anchors transformed and thus in different positions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_is_poly_transformed(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean TRUE if the signifier is to be hidden from this analytical session.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_signifier_poly_to_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_signifier_poly_to_id}{}}}
\subsection{Method \code{get_signifier_poly_to_id()}}{
Get signifier poly to id - the signifier id a transformed poly id related to.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_signifier_poly_to_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A String containing the signifier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_property_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_property_value}{}}}
\subsection{Method \code{change_signifier_property_value()}}{
Change signifier property value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_property_value(id, value, property = "", type = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{The property to change - e.g. title, allow_na, include required, sticky. Optional, default blank. If blank will take title.}

\item{\code{type}}{The type to change "triad", "dyad" etc. Optinal, default blank. If blank the type will be looked up from id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_class"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_class}{}}}
\subsection{Method \code{change_signifier_class()}}{
Change signifier class value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_class(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{String. The new value,}

\item{\code{sig_class}}{user defined but system ones are found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_title}{}}}
\subsection{Method \code{change_signifier_title()}}{
Change signifier title value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_title(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{String. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_titles}{}}}
\subsection{Method \code{change_signifier_titles()}}{
Change several signifier titles from the title export file updates or a data frame loaded from it
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_titles(file_name = NULL, df = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_name}}{csv file containing the updated titles.}

\item{\code{df}}{Dataframe of the csv file containing the updated titles.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_tooltip"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_tooltip}{}}}
\subsection{Method \code{change_signifier_tooltip()}}{
Change signifier tooltips value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_tooltip(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{String. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_allow_na"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_allow_na}{}}}
\subsection{Method \code{change_signifier_allow_na()}}{
Change signifier allow_na value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_allow_na(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_fragment"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_fragment}{}}}
\subsection{Method \code{change_signifier_fragment()}}{
Change signifier fraagment value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_fragment(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_required"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_required}{}}}
\subsection{Method \code{change_signifier_required()}}{
Change signifier required value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_required(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_sticky"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_sticky}{}}}
\subsection{Method \code{change_signifier_sticky()}}{
Change signifier sticky value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_sticky(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifiers_include"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifiers_include}{}}}
\subsection{Method \code{change_signifiers_include()}}{
Change signifier include value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifiers_include(
  include_file = NULL,
  include_df = NULL,
  ids = NULL,
  value = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_file}}{A file name of the include values to change.}

\item{\code{include_df}}{A data frame of the include values to change.}

\item{\code{ids}}{A vector of ids to change include values.}

\item{\code{value}}{A value "Y" or "N" to change the ids in the ids vector.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_include"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_include}{}}}
\subsection{Method \code{change_signifier_include()}}{
Change signifier include value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_include(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_hide"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_hide}{}}}
\subsection{Method \code{change_signifier_hide()}}{
Change signifier hide value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_hide(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_is_polymorphic"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_is_polymorphic}{}}}
\subsection{Method \code{change_signifier_is_polymorphic()}}{
Change signifier is polymorphic
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_is_polymorphic(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_is_poly_transformed"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_is_poly_transformed}{}}}
\subsection{Method \code{change_signifier_is_poly_transformed()}}{
Change signifier is polymorphic transformed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_is_poly_transformed(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{Boolean. The new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_poly_to_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_poly_to_id}{}}}
\subsection{Method \code{change_poly_to_id()}}{
Change signifier poly to id - the id a poly transformed signifier is from
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_poly_to_id(id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{String The id of the original signifier.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_signifier_properties"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_signifier_properties}{}}}
\subsection{Method \code{export_signifier_properties()}}{
export a signifier type header properties to data frame or export ToDo update to multiple properties
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_signifier_properties(
  ids = "",
  actual_export = TRUE,
  property = "title",
  signifier_type = "triad",
  tfw_id = "",
  name_prefix = "",
  keep_only_include = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{a vector of ids. Blank means all ids of specified type.}

\item{\code{actual_export}}{Boolean, default TRUE, if TRUE csv export otherwise return data frame.}

\item{\code{property}}{the property to export Should be valid ("title"    "tooltip"  "allow_na" "fragment" "required" "sticky"   "include"  "hide")}

\item{\code{signifier_type}}{The signifier type to export. Default "triad"}

\item{\code{tfw_id}}{A list of one or more framework ids to print properties from}

\item{\code{name_prefix}}{if actual_export TRUE, a prefix to the csv file name. Default blank, default file name only.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
df of export or invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_signifier_header_properties"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_signifier_header_properties}{}}}
\subsection{Method \code{export_signifier_header_properties()}}{
Export all signifier header properties for all signifiers in the framework.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_signifier_header_properties(
  ids = "",
  actual_export = TRUE,
  signifier_types = "",
  name_prefix = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{A list of one or more signifier ids to include in the report. If blank, all ids.}

\item{\code{actual_export}}{Boolean, default TRUE, if TRUE csv export otherwise return data frame.}

\item{\code{signifier_types}}{A list of one or more signifier types to include in the report. If blank, all types.}

\item{\code{name_prefix}}{if actual_export TRUE, a prefix to the csv file name. Default blank, default file name only.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
df of export or invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_signifier_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_signifier_titles}{}}}
\subsection{Method \code{export_signifier_titles()}}{
Export csv of the signifier tiles for "dyad", "triad", "list" and "stones" signifier types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_signifier_titles(
  sig_types = c("triad", "dyad", "list", "stones"),
  file_name = "signifier_titles.csv",
  actual_export = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_types}}{- vector of signifier types to use - can be all, some or one of "triad" "dyad" "list" or "stones". Default all of these.}

\item{\code{file_name}}{- Default "signifier_titles.csv" - the name of the file ot export if "actual_export" set to TRUE.}

\item{\code{actual_export}}{= default TRUE If TRUE output csv export otherwise return the dataframe with the values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_content_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_content_titles}{}}}
\subsection{Method \code{export_content_titles()}}{
Export csv of the triad/dyad anchor text, list item titles, stones stone titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_content_titles(
  sig_types = c("triad", "dyad", "list", "stones"),
  file_name = "content_titles.csv",
  actual_export = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_types}}{- vector of signifier types to use - can be all, some or one of "triad" "dyad" "list" or "stones". Default all of these.}

\item{\code{file_name}}{- default "content_titles.csv", the name of the export file if actual_export set to TRUE.}

\item{\code{actual_export}}{= default TRUE If TRUE output csv export otherwise return the dataframe with the values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_multiselect_list_items"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_multiselect_list_items}{}}}
\subsection{Method \code{export_multiselect_list_items()}}{
Export csv of the multi-select mcq items for data mapping purposes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_multiselect_list_items(
  list_ids = NULL,
  repeating = 1,
  file_name = "list_transforms.csv",
  actual_export = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list_ids}}{- ids of the multi-select lists to export, default NULL, export all multi-select lists.}

\item{\code{repeating}}{- the number of times each list is to repeat. Default 1.}

\item{\code{file_name}}{- Default "signifier_titles.csv" - the name of the file ot export if "actual_export" set to TRUE.}

\item{\code{actual_export}}{= default TRUE If TRUE output csv export otherwise return the dataframe with the values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_signifier_properties"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_signifier_properties}{}}}
\subsection{Method \code{import_signifier_properties()}}{
import a signifier header property to apply to signifier definition. ToDo update to multiple properties
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_signifier_properties(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{The name of a csv file or data frame to apply.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_content_proprty_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_content_proprty_value}{}}}
\subsection{Method \code{change_signifier_content_proprty_value()}}{
Change signifier content property value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_content_proprty_value(
  id,
  value,
  property = "",
  type = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type.}

\item{\code{type}}{The type to change "triad", "dyad" etc. Optinal, default blank. If blank the type will be looked up from id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-change_signifier_content_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-change_signifier_content_label_value}{}}}
\subsection{Method \code{change_signifier_content_label_value()}}{
Change signifier content label value - the labels are used in triads and dyads
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$change_signifier_content_label_value(
  id,
  label,
  value,
  property = "",
  type = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{label}}{The label being updated (values are "top", "left" and "right" ("top" only used in triads))}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}

\item{\code{type}}{The type to change "triad" or "dyad" etc. Optinal, default blank. If blank the type will be looked up from id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_zone_name}{}}}
\subsection{Method \code{get_zone_name()}}{
returns the zone column name for a given triad or dyad id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_zone_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad or dyad id to return its zone column name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_anchor_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_anchor_value}{}}}
\subsection{Method \code{get_anchor_value()}}{
Get an anchor property value for the "triad" or "dyad" specified by the id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_anchor_value(
  id,
  anchor_id = "",
  anchor = "",
  field = "text",
  type = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad or dyad signifier id whose type to retrieve.}

\item{\code{anchor_id}}{Optional. Default "". The id of the anchor to be retrieved. either anchor_id or anchor must be supplied.anchor_id takes preference if both supplied.}

\item{\code{anchor}}{Optional, Default "". The anchor to return field from. Anchor is either "left", "right" for dyad/triads and "top" for triads. Either anchor_id or anchor must be supplied.}

\item{\code{field}}{Optoinal. Default "text" for the text property. Other allowable values "id", "image", "show_image", "show_label"}

\item{\code{type}}{Optional. Default "". Type is "triad" or "dyad". If not supplied, it is looked up based on the id parameter.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A text string of value of the field parameter for the triad or dyad specified.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_anchor_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_anchor_ids}{}}}
\subsection{Method \code{get_anchor_ids()}}{
Get the anchor ids for the triad or dyad specified by the id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_anchor_ids(id, delist = FALSE, type = "", anchor = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id to retrieve anchor ids.}

\item{\code{delist}}{Default FALSE If TRUE return the list of ids as an unnamed vector otherwise as a named list ("top"/triads and "left" and "right" for dyads/triads)}

\item{\code{type}}{Default "". Optional. The type of signifier, "triad" or "dyad". If blank, type determined by lookup.}

\item{\code{anchor}}{Default "". Optional, "L/l/left", "R/r/right", "T/t/top" (top selection applicable to triads only)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character list/vector of anchor ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_anchor_text}{}}}
\subsection{Method \code{get_anchor_text()}}{
Get the anchor text.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_anchor_text(
  sig_id,
  anchor_id = "",
  anchor = "",
  removeHTML = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id to retrieve anchor ids.}

\item{\code{anchor_id}}{The signifier anchor id - either ID passed or anchor, not both}

\item{\code{anchor}}{The anchor Default "". Optional, "L/l/left", "R/r/right", "T/t/top" (top selection applicable to triads only)}

\item{\code{removeHTML}}{Boolean default FALSE, Whether to remove any html string in the text}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_anchor_compositional_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_anchor_compositional_column_names}{}}}
\subsection{Method \code{get_anchor_compositional_column_names()}}{
Get the anchor column names for the compositional content - i.e. Top/Left/Right for triads and Left/Right for dyads.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_anchor_compositional_column_names(id, type = "", delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id to retrieve anchor ids.}

\item{\code{type}}{Default "". Optional. The type of signifier, "triad" or "dyad". If blank, type determined by lookup.}

\item{\code{delist}}{Default FALSE, If TRUE then only the list contents is given (the actual column names) otherwise the ids as headers included.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector of the data column names for the compositional values for the dyad or triad.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_anchor_R6}{}}}
\subsection{Method \code{get_anchor_R6()}}{
Get an anchor R6 class instance for the supplied triad or dyad anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_anchor_R6(id, anchor_id = "", anchor = "", type = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id to retrieve anchor ids.}

\item{\code{anchor_id}}{Optional. Default "". The id of the anchor to be retrieved. One of anchor_id or anchor must be supplied.}

\item{\code{anchor}}{Optional, Default "". Optional. The anchor name to return. Values "top" (triad), "left", "right" (triad and dyad)}

\item{\code{type}}{Default "". Optional. The type of signifier, "triad" or "dyad". If blank, type determined by lookup.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the anchor requested.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_item_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_item_ids}{}}}
\subsection{Method \code{get_item_ids()}}{
Get a list of list item ids for passed list signifier id. Currently only lists supported but expected imageselect and others to follow.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_item_ids(id, type = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id to retrieve anchor ids.}

\item{\code{type}}{Default "". Optional. The type of signifier, "list" only allowable value. If not provided, value obtained via lookup.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector of the list item ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_id}{}}}
\subsection{Method \code{get_parent_id()}}{
Get parent id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character string of the parent fraework id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_name}{}}}
\subsection{Method \code{get_parent_name()}}{
Get parent id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_name()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character string of the parent fraework id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_signifier_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_signifier_ids}{}}}
\subsection{Method \code{get_parent_signifier_ids()}}{
Get parent signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_signifier_ids(include_types = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_types}}{Boolean TRUE if the signifier types to be included or FALSE (default) for just the ids.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or list of the signifier ids of the parent framework with their types if requested.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_signifier_ids_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_signifier_ids_by_type}{}}}
\subsection{Method \code{get_parent_framework_signifier_ids_by_type()}}{
Get parent framework signifier ids by type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_signifier_ids_by_type(type = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The signifier type.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_triad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_triad_ids}{}}}
\subsection{Method \code{get_parent_framework_triad_ids()}}{
Get parent framework triad signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_triad_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of triad signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_dyad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_dyad_ids}{}}}
\subsection{Method \code{get_parent_framework_dyad_ids()}}{
Get parent framework dyad signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_dyad_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of dyad signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_list_ids}{}}}
\subsection{Method \code{get_parent_framework_list_ids()}}{
Get parent framework list signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_list_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of list signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_stones_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_stones_ids}{}}}
\subsection{Method \code{get_parent_framework_stones_ids()}}{
Get parent framework stones signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_stones_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of stones signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_freetext_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_freetext_ids}{}}}
\subsection{Method \code{get_parent_framework_freetext_ids()}}{
Get parent framework freetext signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_freetext_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of freetext signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_imageselect_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_imageselect_ids}{}}}
\subsection{Method \code{get_parent_framework_imageselect_ids()}}{
Get parent framework imageselect signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_imageselect_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of imageselect signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_audio_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_audio_ids}{}}}
\subsection{Method \code{get_parent_framework_audio_ids()}}{
Get parent framework audio signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_audio_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of audio signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_photo_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_photo_ids}{}}}
\subsection{Method \code{get_parent_framework_photo_ids()}}{
Get parent framework photo signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_photo_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of photo signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_uniqueid_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_uniqueid_ids}{}}}
\subsection{Method \code{get_parent_framework_uniqueid_ids()}}{
Get parent framework uniqueid signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_uniqueid_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of uniqueid signifier ids.(should only return one)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_type_by_signifierid"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_type_by_signifierid}{}}}
\subsection{Method \code{get_parent_framework_type_by_signifierid()}}{
Get parent framework type by signifier id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_type_by_signifierid(sig_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string of the signifier type.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_count_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_count_by_type}{}}}
\subsection{Method \code{get_parent_framework_count_by_type()}}{
Get linked framework signifier count by framework/type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_count_by_type(fw_id, type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id}

\item{\code{type}}{The signifier type}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer with the signifier count.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_single_select_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_single_select_list_ids}{}}}
\subsection{Method \code{get_parent_single_select_list_ids()}}{
Get the signifier ids for all single select lists for the parent framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_single_select_list_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_multi_select_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_multi_select_list_ids}{}}}
\subsection{Method \code{get_parent_multi_select_list_ids()}}{
Get the signifier ids for all multi select lists for the parent framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_multi_select_list_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-remove_signifier_definition"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-remove_signifier_definition}{}}}
\subsection{Method \code{remove_signifier_definition()}}{
Remove a signifier definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$remove_signifier_definition(tid, tfw_id = "", ttype = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tid}}{the signifier id to remove}

\item{\code{tfw_id}}{The framework IDs of the signifier to remove, if blank, code will find and use all occurrences}

\item{\code{ttype}}{the signifier type to remove. Optional, if blank, looked up.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-is_linked_framework"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-is_linked_framework}{}}}
\subsection{Method \code{is_linked_framework()}}{
Is a linked framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$is_linked_framework()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Boolean TRUE if the framework is a linked framework otherwise FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_count}{}}}
\subsection{Method \code{get_linked_framework_count()}}{
Get linked framework count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_count()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer of the number of linked frameworks
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_id}{}}}
\subsection{Method \code{get_parent_framework_id()}}{
Get parent framework id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Parent fraework id
Get linked framework parent name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_parent_framework_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_parent_framework_name}{}}}
\subsection{Method \code{get_parent_framework_name()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_parent_framework_name()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Parent name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_ids}{}}}
\subsection{Method \code{get_linked_framework_ids()}}{
Get linked framework ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_ids(include_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{TRUE to return list that includes the framework names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of linked framework ids or list of ids including names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_names}{}}}
\subsection{Method \code{get_linked_framework_names()}}{
Get linked framework names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_names(fw_id = NULL, include_ids = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The framework ID to return. Default NULL, include all linked frameworks.}

\item{\code{include_ids}}{Default FALSE, do not include ids with names. TRUE to include the ids with the name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of linked framework names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_list}{}}}
\subsection{Method \code{get_linked_framework_list()}}{
Get linked framework list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list of linked frameworks- names ids, values names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_mcq_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_mcq_list}{}}}
\subsection{Method \code{get_linked_framework_mcq_list()}}{
Get linked framework list widget.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_mcq_list(include_names = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{Default TRUE, shows the framework titles as list names otherwise IDs only.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named list of linked frameworks IDs, with framework titles as names (if include_names TRUE)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_selection_lists"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_selection_lists}{}}}
\subsection{Method \code{get_linked_framework_selection_lists()}}{
Get list ids that are used to branch linked frameworks (only one from primary). .
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_selection_lists()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of list ids used to enable linked framework branch selection. .
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_chain"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_chain}{}}}
\subsection{Method \code{get_linked_framework_chain()}}{
Get linked framework id chain.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_chain(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A linked framework ID.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
parent chain of framework ids, NULL if the parent is top
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_mcq_list_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_mcq_list_id}{}}}
\subsection{Method \code{get_linked_framework_mcq_list_id()}}{
Get the MCQ list id that selects the linked framework passed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_mcq_list_id(
  fw_id,
  include_embedded_name = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A vector of one or more linked framework ids.}

\item{\code{include_embedded_name, }}{Boolean, default TRUE, include the embedded name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
One or more list ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_mcq_list_item_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_mcq_list_item_id}{}}}
\subsection{Method \code{get_linked_framework_mcq_list_item_id()}}{
Get the MCQ list item id that selects the linked framework passed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_mcq_list_item_id(embedded_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{embedded_id}}{The the embedded widget id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The list item id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_mcq_list_item_id_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_mcq_list_item_id_list}{}}}
\subsection{Method \code{get_linked_framework_mcq_list_item_id_list()}}{
Get the MCQ list and list item id that selects the linked framework passed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_mcq_list_item_id_list(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The list item id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_ids_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_ids_by_type}{}}}
\subsection{Method \code{get_linked_framework_ids_by_type()}}{
Get linked framework signifier ids by type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_ids_by_type(
  fw_id,
  type = NULL,
  include_parent = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}

\item{\code{type}}{The signifier type.}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_triad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_triad_ids}{}}}
\subsection{Method \code{get_linked_framework_triad_ids()}}{
Get linked framework triad signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_triad_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of triad signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_dyad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_dyad_ids}{}}}
\subsection{Method \code{get_linked_framework_dyad_ids()}}{
Get linked framework dyad signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_dyad_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of dyad signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_list_ids}{}}}
\subsection{Method \code{get_linked_framework_list_ids()}}{
Get linked framework list signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_list_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_list_demographics_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_list_demographics_ids}{}}}
\subsection{Method \code{get_linked_framework_list_demographics_ids()}}{
Get linked framework list demographics signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_list_demographics_ids(
  fw_id,
  include_parent = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_stones_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_stones_ids}{}}}
\subsection{Method \code{get_linked_framework_stones_ids()}}{
Get linked framework stones signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_stones_ids(fw_id, include_parent)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of stones signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_freetext_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_freetext_ids}{}}}
\subsection{Method \code{get_linked_framework_freetext_ids()}}{
Get linked framework freetext signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_freetext_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of freetext signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_imageselect_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_imageselect_ids}{}}}
\subsection{Method \code{get_linked_framework_imageselect_ids()}}{
Get linked framework imageselect signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_imageselect_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of imageselect signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_audio_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_audio_ids}{}}}
\subsection{Method \code{get_linked_framework_audio_ids()}}{
Get linked framework audio signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_audio_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of audio signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_photo_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_photo_ids}{}}}
\subsection{Method \code{get_linked_framework_photo_ids()}}{
Get linked framework photo signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_photo_ids(fw_id, include_parent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{A single or vector of linked framework id(s).}

\item{\code{include_parent}}{Whether to include the parent ids in the returned list (only if type entered). Default FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of photo signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_uniqueid_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_uniqueid_ids}{}}}
\subsection{Method \code{get_linked_framework_uniqueid_ids()}}{
Get linked framework uniqueid signifier ids ToDo - not sure on what this was suppose to do
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_uniqueid_ids(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of uniqueid signifier ids.(should only return one)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_type_by_signifierid"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_type_by_signifierid}{}}}
\subsection{Method \code{get_linked_framework_type_by_signifierid()}}{
Get linked framework signifier type by signifier id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_type_by_signifierid(fw_id, sig_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}

\item{\code{sig_id}}{The signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string of the signifier type.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_count_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_count_by_type}{}}}
\subsection{Method \code{get_linked_framework_count_by_type()}}{
Get linked framework signifier count by type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_count_by_type(fw_id, type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}

\item{\code{type}}{The signifier type}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer with the signifier count.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_framework_used_signifier_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_framework_used_signifier_types}{}}}
\subsection{Method \code{get_linked_framework_used_signifier_types()}}{
Get used signifier types by framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_framework_used_signifier_types(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{The linked framework id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector with the signifier types used in the linked framework.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_single_select_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_single_select_list_ids}{}}}
\subsection{Method \code{get_linked_single_select_list_ids()}}{
Get the signifier ids for all single select lists for a linked framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_single_select_list_ids(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{the linked framework id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_multi_select_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_multi_select_list_ids}{}}}
\subsection{Method \code{get_linked_multi_select_list_ids()}}{
Get the signifier ids for all multi select lists for a linked framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_multi_select_list_ids(fw_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fw_id}}{the linked framework id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_framework_for_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_framework_for_id}{}}}
\subsection{Method \code{get_framework_for_id()}}{
Get the framework IDs for a given signifier id (and optionally type) (signifier library can contain multiple frameworks for an id)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_framework_for_id(tsig_id, ttype = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tsig_id}}{the signifier id}

\item{\code{ttype}}{the signifier type}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector containing The framework ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_count}{}}}
\subsection{Method \code{get_list_count()}}{
Get list count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of list occurances
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_ids}{}}}
\subsection{Method \code{get_list_ids()}}{
Get list ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_ids(
  keep_only_include = FALSE,
  sig_class = NULL,
  exclude_multiple = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{exclude_multiple}}{- Deafult FALSE whether to exclude multiple select MCQs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework list ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_titles}{}}}
\subsection{Method \code{get_list_titles()}}{
Get list of list titles with list ids as headers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_titles(
  delist = FALSE,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{delist}}{Whether to delist returned list (no ids as headers)}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework list titles if delist otherwise list of titles with ids as names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_demographics_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_demographics_ids}{}}}
\subsection{Method \code{get_list_demographics_ids()}}{
Get list demographic ids (sticky = TRUE)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_demographics_ids(
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of ids of demographic lists
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_multiselect_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_multiselect_list_ids}{}}}
\subsection{Method \code{get_multiselect_list_ids()}}{
Get ids of multi-select lists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_multiselect_list_ids(
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the list ids that are  multi-select
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_all_multiselect_list_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_all_multiselect_list_column_names}{}}}
\subsection{Method \code{get_all_multiselect_list_column_names()}}{
Get all colunm names of all  multi-select lists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_all_multiselect_list_column_names(
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the column names of all multiselect lists
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_max_responses"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_max_responses}{}}}
\subsection{Method \code{get_list_max_responses()}}{
Get the maximum allowable selections for a list signifier
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_max_responses(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose maximum responses is to be retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A positive integer value of the maximum number of allowable selections for the list signifier id passed in.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_min_responses"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_min_responses}{}}}
\subsection{Method \code{get_list_min_responses()}}{
Get the minimum allowable selections for a list signifier
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_min_responses(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose minimum responses is to be retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A positive integer value of the minimum number of allowable selections for the list signifier id passed in.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_num_items"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_num_items}{}}}
\subsection{Method \code{get_list_num_items()}}{
Get the number of items defined for the  for passed list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_num_items(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose other number of items is to be retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer value of the number of items defined for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_R6}{}}}
\subsection{Method \code{get_list_items_R6()}}{
Get a list of the R6 class instances for each list item in the passed list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose R6 class instances of each list item to be retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of R6 class instances of each list item for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_ids}{}}}
\subsection{Method \code{get_list_items_ids()}}{
Get a vector of the item ids for the passed list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_ids(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose item ids to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list item ids for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_column_names}{}}}
\subsection{Method \code{get_list_column_names()}}{
Get a vector of the data column names for the passed list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_column_names(id, return_selected = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose data column names to be returned.}

\item{\code{return_selected}}{- default FALSE, return the selected columns if the list is a multi-select list. Ignored for single select lists.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list column names for the passed list. Single value for single select list Multiple values for multi-select list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_na_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_na_column_name}{}}}
\subsection{Method \code{get_list_na_column_name()}}{
Get data N/A column name for passed in list id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_na_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The list id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the N/A column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_titles}{}}}
\subsection{Method \code{get_list_items_titles()}}{
Get a vector of the list item titles for the passed list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_titles(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose titles to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list titles for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_concat_id_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_concat_id_titles}{}}}
\subsection{Method \code{get_list_items_concat_id_titles()}}{
Get a concatenation of the list item id and title for a list id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_concat_id_titles(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose titles to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the concatenation of the list item ids and titles for a list id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-dedup_list_item_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-dedup_list_item_titles}{}}}
\subsection{Method \code{dedup_list_item_titles()}}{
Deduplicate list item titles (required for workbench multi-select MCQs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$dedup_list_item_titles(
  id = NULL,
  multi_select_only = TRUE,
  append = "A_",
  prefix_suffix = "prefix",
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id to be deduplicated. Default NULL, all MCQs, multi or single.}

\item{\code{multi_select_only}}{Default TRUE, only process the multi-select mcqs (important for workbench)}

\item{\code{append}}{Default "A_" each duplication will be appended with this strung plus an integer of the repeat.}

\item{\code{prefix_suffix}}{Default "prefix", append value at the start of the title otherwise "suffix" to append at the end.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() funtion.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list titles for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_mcq_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_mcq_list}{}}}
\subsection{Method \code{get_list_items_mcq_list()}}{
Get a named list of the list item ids (values) and titles (names) for the passed list. Used for shiny dropdown lists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_mcq_list(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose ids and titles to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named list of list ids (values) and titles (names) for the passed list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_column_mcq_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_column_mcq_names}{}}}
\subsection{Method \code{get_list_column_mcq_names()}}{
Get a vector of the data column names for the passed list named with the item titles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_column_mcq_names(
  id,
  keep_only_include = FALSE,
  delist = FALSE,
  return_selected = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose data column names to be returned.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{delist}}{if TRUE, return delisted to column header names only. Default FALSE}

\item{\code{return_selected}}{- Default FALSE, whether to bring back the "_selected" names for a multi-select MCQ.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list column names for the passed list. Single value for single select list Multiple values for multi-select list with title as names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_id_with_other"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_id_with_other}{}}}
\subsection{Method \code{get_list_item_id_with_other()}}{
Get the list item id (if any) that has the other freetext id defined. See get_list_other_ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_id_with_other(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The list signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Signifier ID of the list item that contains the other freetext signifiier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_free_text_id_with_other"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_free_text_id_with_other}{}}}
\subsection{Method \code{get_list_item_free_text_id_with_other()}}{
Get the list item freetext id for the list item other id (if any). See get_list_other_ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_free_text_id_with_other(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The list signifier id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Signifier ID of the freetext for the other signifiier id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_R6}{}}}
\subsection{Method \code{get_list_item_R6()}}{
Get the R6 class instance of the passed list and list item.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_R6(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item R6 class instance to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item R6 class instance to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the list item requested.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_title}{}}}
\subsection{Method \code{get_list_item_title()}}{
Get the title of a list item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_title(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item title to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item title to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string containing the list item title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_items_title_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_items_title_by_id}{}}}
\subsection{Method \code{get_list_items_title_by_id()}}{
Get the title of a list item - making compatable sith get_stones_stone_titles_by_id and get_list_items_titles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_items_title_by_id(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item title to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item title to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string containing the list item title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_tooltip"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_tooltip}{}}}
\subsection{Method \code{get_list_item_tooltip()}}{
Get the tooltip of a list item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_tooltip(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item tooltip to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item tooltip to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string containing the list item tooltip
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_visible"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_visible}{}}}
\subsection{Method \code{get_list_item_visible()}}{
Get the is visible of a list item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_visible(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item "is visible" to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item "is visible" to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Boolean indicating whether the anchor is visible (TRUE) or not (FALSE)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_other_signifier_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_other_signifier_id}{}}}
\subsection{Method \code{get_list_item_other_signifier_id()}}{
Get the is other_signifier_id of a list item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_other_signifier_id(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item "is visible" to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item "is visible" to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A GUID of the other_signifier_id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_item_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_item_image}{}}}
\subsection{Method \code{get_list_item_image()}}{
Get the is image of a list item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_item_image(sig_id, item_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose list item image URL to be returned.}

\item{\code{item_id}}{The signifier item id of the list whose list item item image URL to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Boolean indicating whether the anchor is visible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_single_select_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_single_select_list_ids}{}}}
\subsection{Method \code{get_single_select_list_ids()}}{
Get the signifier ids for all single select lists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_single_select_list_ids(
  keep_only_include = FALSE,
  sig_class = NULL,
  include_titles = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{default FALSE, if TRUE, only return those ids that have include set to TRUE.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{include_titles}}{- If TRUE, return vector will have list titles as titles. Useful for dropdown lists.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_other_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_other_ids}{}}}
\subsection{Method \code{get_list_other_ids()}}{
Get the list ids that have an other freetext signifier id. see get_list_item_id_with_other and get_list_item_free_text_id_with_other
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_other_ids(
  list_ids = "",
  as_named_list = FALSE,
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list_ids}}{a vector of list ids to check. Default blank for all list ids}

\item{\code{as_named_list}}{a boolean. Default FALSE. If TRUE named list returned with names the list ids.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of the other signifier ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_other_list_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_other_list_ids}{}}}
\subsection{Method \code{get_list_other_list_ids()}}{
get list item ids for a given set of other ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_other_list_ids(ids)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{a vector of list ids to check. Default blank for all list ids}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of list ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_list_ids_by_other"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_list_ids_by_other}{}}}
\subsection{Method \code{get_list_ids_by_other()}}{
get list whose names are the list IDs from other item ids that are others
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_list_ids_by_other(other_ids = "", as_named_list = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other_ids}}{a vector of list ids to check. Default blank for all list ids}

\item{\code{as_named_list}}{a boolean. Default FALSE. If TRUE named list returned with names the list ids.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of results.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_linked_fw_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_linked_fw_list}{}}}
\subsection{Method \code{get_linked_fw_list()}}{
get list whose names are the  frameworkids and values the linked framework MCQ ids determining linked frameworks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_linked_fw_list(list_ids = "", as_named_list = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list_ids}}{a vector of list ids to check. Default blank for all list ids}

\item{\code{as_named_list}}{a boolean. Default FALSE. If TRUE named list returned with names the list ids.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of results.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_list_content_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_list_content_property}{}}}
\subsection{Method \code{update_list_content_property()}}{
Update the list content properties
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_list_content_property(id, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the signifier id}

\item{\code{property}}{the property to update (valid values "max_responses", "min_responses", "random_order")}

\item{\code{value}}{the new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_list_content_item_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_list_content_item_property}{}}}
\subsection{Method \code{update_list_content_item_property()}}{
Update the list content item properties
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_list_content_item_property(sig_id, item_id, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{the signifier id}

\item{\code{item_id}}{the item id}

\item{\code{property}}{the property to update (valid values image", "title", "tooltip", "visible", "other_signifier_id")}

\item{\code{value}}{the new value.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_list_content_item_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_list_content_item_title}{}}}
\subsection{Method \code{update_list_content_item_title()}}{
Update the list item title
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_list_content_item_title(sig_id, item_id, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{the signifier id}

\item{\code{item_id}}{The item id}

\item{\code{value}}{the new value.}

\item{\code{property}}{The property to update}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_list_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_list_titles}{}}}
\subsection{Method \code{export_list_titles()}}{
Export list and liste item titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_list_titles(
  ids = "",
  actual_export = TRUE,
  name_prefix = "",
  keep_only_include = FALSE,
  sig_class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{List of list ids to export. Default blank, all lists}

\item{\code{actual_export}}{or return data frame. Default TRUE - return data frame.}

\item{\code{name_prefix}}{prefix to put on the csv file name if actual_export TRUE.}

\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the triad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_list_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_list_titles}{}}}
\subsection{Method \code{import_list_titles()}}{
import triad and triad anchor titles from csv file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_list_titles(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{A dataframe or csv file name containing the import data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the triad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_count}{}}}
\subsection{Method \code{get_triad_count()}}{
Get triad count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of triad occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_ids}{}}}
\subsection{Method \code{get_triad_ids()}}{
Get triad ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework triad ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_labels_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_labels_R6}{}}}
\subsection{Method \code{get_triad_labels_R6()}}{
Get the triad labels R6 class instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_labels_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose list item image URL to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
R6 class instance of the triad labels.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_pointer_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_pointer_image}{}}}
\subsection{Method \code{get_triad_pointer_image()}}{
Get the pointer image of the passed triad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_pointer_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose tryad item pointer image to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string of the image URL for the triad impage pointer.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_background_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_background_image}{}}}
\subsection{Method \code{get_triad_background_image()}}{
Get the background image of the passed triad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_background_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose tryad item background image to be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string of the image URL for the triad background image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_ids}{}}}
\subsection{Method \code{get_triad_anchor_ids()}}{
Get the triad anchor IDs of the passed triad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_ids(id, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the triad whose anchor ids are returned.}

\item{\code{delist}}{Default FALSE If TRUE return the list of ids as an unnamed vector otherwise as a named list.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of the anchor ids of the passted in triad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_texts"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_texts}{}}}
\subsection{Method \code{get_triad_anchor_texts()}}{
Get the triad anchor texts of the passed triad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_texts(id, delist = FALSE, label_or_id = "label")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the triad whose anchor ids are returned.}

\item{\code{delist}}{Default FALSE If TRUE return the list of ids as an unnamed vector otherwise as a named list.}

\item{\code{label_or_id}}{If delist FALSE, return list names to be the "top", "left", "right" labels or the anchor ids. "label" or "id"}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of the anchor texts of the passted in triad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_by_id_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_by_id_R6}{}}}
\subsection{Method \code{get_triad_anchor_by_id_R6()}}{
Get a triad anchor R6 object instance for passed triad signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_by_id_R6(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The signifier id of the list whose triad anchor R6 class instance to be returned.}

\item{\code{anchor_id}}{Triad anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instasnce of the triad anchor for the passed triad and anchor ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_R6}{}}}
\subsection{Method \code{get_triad_anchor_R6()}}{
Get a triad anchor R6 object instance for passed triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_R6(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose triad anchor R6 class instance to be returned.}

\item{\code{anchor}}{The anchor to return the R6 class instance ("top", "left", "right".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the triad anchor.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_id}{}}}
\subsection{Method \code{get_triad_anchor_id()}}{
Get a triad anchor id for the passed triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_id(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the list whose anchor id to be returned.}

\item{\code{anchor}}{The anchor to return the id for ("top", "left", "right".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string containing the triad anchor id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_R6}{}}}
\subsection{Method \code{get_triad_left_anchor_R6()}}{
Get the left triad anchor R6 object instance for passed triad signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instasnce of the left triad anchor for the passed triad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_R6}{}}}
\subsection{Method \code{get_triad_top_anchor_R6()}}{
Get the top triad anchor R6 object instance for passed triad signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instasnce of the top triad anchor for the passed triad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_R6}{}}}
\subsection{Method \code{get_triad_right_anchor_R6()}}{
Get the right triad anchor R6 object instance for passed triad signifier id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instasnce of the right triad anchor for the passed triad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_text_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_text_by_id}{}}}
\subsection{Method \code{get_triad_anchor_text_by_id()}}{
Get triad anchor text for passed in triad id and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_text_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The triad id.}

\item{\code{anchor_id}}{The anchor id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_show_image_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_show_image_by_id}{}}}
\subsection{Method \code{get_triad_anchor_show_image_by_id()}}{
Get triad anchor show image for passed in triad id and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_show_image_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The triad id.}

\item{\code{anchor_id}}{The anchor id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_image_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_image_by_id}{}}}
\subsection{Method \code{get_triad_anchor_image_by_id()}}{
Get triad anchor image URL for passed in triad id and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_image_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The triad id.}

\item{\code{anchor_id}}{The anchor id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
String containing the triad image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_show_label_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_show_label_by_id}{}}}
\subsection{Method \code{get_triad_anchor_show_label_by_id()}}{
Get triad anchor show label for passed in triad id and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_show_label_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The triad id.}

\item{\code{anchor_id}}{The anchor id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_text_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_text_by_anchor}{}}}
\subsection{Method \code{get_triad_anchor_text_by_anchor()}}{
Get triad anchor text for passed in triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_text_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{anchor}}{The anchor ("top", "left", "right")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_show_image_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_show_image_by_anchor}{}}}
\subsection{Method \code{get_triad_anchor_show_image_by_anchor()}}{
Get triad anchor show image for passed in triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_show_image_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{anchor}}{The anchor ("top", "left", "right")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_image_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_image_by_anchor}{}}}
\subsection{Method \code{get_triad_anchor_image_by_anchor()}}{
Get triad anchor image URL for passed in triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_image_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{anchor}}{The anchor ("top", "left", "right")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
String containing the triad image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_show_label_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_show_label_by_anchor}{}}}
\subsection{Method \code{get_triad_anchor_show_label_by_anchor()}}{
Get triad anchor show label for passed in triad id and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_show_label_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{anchor}}{The anchor ("top", "left", "right")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_text}{}}}
\subsection{Method \code{get_triad_top_anchor_text()}}{
Get triad top anchor text for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_text(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_show_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_show_image}{}}}
\subsection{Method \code{get_triad_top_anchor_show_image()}}{
Get triad top anchor show image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_show_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_image}{}}}
\subsection{Method \code{get_triad_top_anchor_image()}}{
Get triad top anchor image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad image URL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_show_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_show_label}{}}}
\subsection{Method \code{get_triad_top_anchor_show_label()}}{
Get triad top anchor show label for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_show_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_text}{}}}
\subsection{Method \code{get_triad_left_anchor_text()}}{
Get triad left anchor text for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_text(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad  left anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_show_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_show_image}{}}}
\subsection{Method \code{get_triad_left_anchor_show_image()}}{
Get triad left anchor show image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_show_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_image}{}}}
\subsection{Method \code{get_triad_left_anchor_image()}}{
Get triad left anchor image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_show_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_show_label}{}}}
\subsection{Method \code{get_triad_left_anchor_show_label()}}{
Get triad left anchor show label for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_show_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_text}{}}}
\subsection{Method \code{get_triad_right_anchor_text()}}{
Get triad right anchor text for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_text(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the triad  left anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_show_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_show_image}{}}}
\subsection{Method \code{get_triad_right_anchor_show_image()}}{
Get triad right anchor show image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_show_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_image}{}}}
\subsection{Method \code{get_triad_right_anchor_image()}}{
Get triad right anchor show image for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_show_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_show_label}{}}}
\subsection{Method \code{get_triad_right_anchor_show_label()}}{
Get triad left anchor show label for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_show_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean containing the triad show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_anchor_id}{}}}
\subsection{Method \code{get_triad_top_anchor_id()}}{
Get triad top anchor id for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_anchor_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
String of the top anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_anchor_id}{}}}
\subsection{Method \code{get_triad_left_anchor_id()}}{
Get triad left anchor id for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_anchor_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
String of the left anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_anchor_id}{}}}
\subsection{Method \code{get_triad_right_anchor_id()}}{
Get triad right anchor id for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_anchor_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
String of the right anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_column_name}{}}}
\subsection{Method \code{get_triad_column_name()}}{
Get data column name for passed in triad id and column.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_column_name(id, column, original = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{column}}{The column to return. ("top", "left", "right", "x", "y", "X", "Y")}

\item{\code{original}}{return the original data download name, default FALSE (won't use TRUE often)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_x_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_x_column_name}{}}}
\subsection{Method \code{get_triad_x_column_name()}}{
Get data X column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_x_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the X column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_y_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_y_column_name}{}}}
\subsection{Method \code{get_triad_y_column_name()}}{
Get data Y column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_y_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the Y column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_x_y_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_x_y_column_names}{}}}
\subsection{Method \code{get_triad_x_y_column_names()}}{
Get data X and Y column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_x_y_column_names(id, delist = FALSE, original = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}

\item{\code{delist}}{Default FALSE. If TRUE return unnamed vector.}

\item{\code{original}}{- return the original data download name, default FALSE (won't use TRUE often)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of X and Y
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_top_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_top_column_name}{}}}
\subsection{Method \code{get_triad_top_column_name()}}{
Get data top column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_top_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the top column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_left_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_left_column_name}{}}}
\subsection{Method \code{get_triad_left_column_name()}}{
Get data left column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_left_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the left column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_right_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_right_column_name}{}}}
\subsection{Method \code{get_triad_right_column_name()}}{
Get data right column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_right_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the right column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_na_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_na_column_name}{}}}
\subsection{Method \code{get_triad_na_column_name()}}{
Get data N/A column name for passed in triad id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_na_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The triad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the N/A column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_compositional_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_compositional_column_names}{}}}
\subsection{Method \code{get_triad_compositional_column_names()}}{
Get the compositional anchor data column names for a given triad. Thus "top" "left" and "right" column names only.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_compositional_column_names(id, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Triad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named ("top", "left", "right") list.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An unnamed vector or named list of triad compositional anchor data column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_anchor_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_anchor_column_names}{}}}
\subsection{Method \code{get_triad_anchor_column_names()}}{
Get the anchor data column names for a given triad. Thus "top" "left"  "right" and N/A if applicable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_anchor_column_names(
  id,
  delist = FALSE,
  exclude_na = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Triad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named ("top", "left", "right", "na") list.}

\item{\code{exclude_na}}{Boolean, default FALSE, whether to include the N/A column name in the return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named or unnamed vector of triad anchor data column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_all_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_all_column_names}{}}}
\subsection{Method \code{get_triad_all_column_names()}}{
Get the data column names for a given triad. Thus "x", "y", top" "left"  "right" and N/A if applicable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_all_column_names(id, delist = FALSE, exclude_na = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Triad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named ("top", "left", "right", "na") list.}

\item{\code{exclude_na}}{Boolean, default FALSE, whether to include the N/A column name in the return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named or unnamed vector of triad  data column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_zone_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_zone_table_headers}{}}}
\subsection{Method \code{get_triad_zone_table_headers()}}{
Return the triad zone contingency table headers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_zone_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_zone_names}{}}}
\subsection{Method \code{get_triad_zone_names()}}{
get all triad zone column names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_zone_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_triad_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_triad_zone_name}{}}}
\subsection{Method \code{get_triad_zone_name()}}{
Get the data zone column name for a given triad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_triad_zone_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Triad id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_triad_top_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_triad_top_label_value}{}}}
\subsection{Method \code{update_triad_top_label_value()}}{
update triad label top value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_triad_top_label_value(id, value, property = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_triad_left_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_triad_left_label_value}{}}}
\subsection{Method \code{update_triad_left_label_value()}}{
update triad label left value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_triad_left_label_value(id, value, property = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_triad_right_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_triad_right_label_value}{}}}
\subsection{Method \code{update_triad_right_label_value()}}{
update triad label right value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_triad_right_label_value(id, value, property = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_triad_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_triad_titles}{}}}
\subsection{Method \code{export_triad_titles()}}{
Export triad and triad anchor titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_triad_titles(
  ids = "",
  actual_export = TRUE,
  name_prefix = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{List of triad ids to export. Default blank, all triads.}

\item{\code{actual_export}}{or return data frame. Default TRUE.}

\item{\code{name_prefix}}{prefix to put on the csv file name if actual_export TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the triad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_triad_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_triad_titles}{}}}
\subsection{Method \code{import_triad_titles()}}{
import triad and triad anchor titles from csv file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_triad_titles(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{data frame or csv file name of the triad data to import.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the triad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_count}{}}}
\subsection{Method \code{get_dyad_count()}}{
Get dyad count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of dyad occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_ids}{}}}
\subsection{Method \code{get_dyad_ids()}}{
Get dyad ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework dyad ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_labels_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_labels_R6}{}}}
\subsection{Method \code{get_dyad_labels_R6()}}{
Get dyad labels for id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_labels_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the dyad anchors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_pointer_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_pointer_image}{}}}
\subsection{Method \code{get_dyad_pointer_image()}}{
Get dyad pointer image URL for id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_pointer_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string of the pointer image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_background_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_background_image}{}}}
\subsection{Method \code{get_dyad_background_image()}}{
Get dyad background image URL for id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_background_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string of the background image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_ids}{}}}
\subsection{Method \code{get_dyad_anchor_ids()}}{
Get dyad anchor ids for id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_ids(id, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named list ("left", "right", "na").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An unamed vector or named list of the dyad anchor ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_texts"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_texts}{}}}
\subsection{Method \code{get_dyad_anchor_texts()}}{
Get the dyad anchor texts of the passed dyad
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_texts(id, delist = FALSE, label_or_id = "label")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id of the dyad whose anchor ids are returned.}

\item{\code{delist}}{Default FALSE If TRUE return the list of ids as an unnamed vector otherwise as a named list.}

\item{\code{label_or_id}}{If delist FALSE, return list names to be the  "left", "right" labels or the anchor ids. "label" or "id"}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or named list of the anchor texts of the passted in dyad id.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_id}{}}}
\subsection{Method \code{get_dyad_anchor_id()}}{
Get dyad anchor id for anchor ("left", "right")
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_id(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{Anchor to retrieve anchor id ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string containing the dyad anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_by_id_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_by_id_R6}{}}}
\subsection{Method \code{get_dyad_anchor_by_id_R6()}}{
Get dyad anchor R6 class instance for dyad and anchor id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_by_id_R6(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The dyad id.}

\item{\code{anchor_id}}{Anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the dyad anchor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_R6}{}}}
\subsection{Method \code{get_dyad_anchor_R6()}}{
Get dyad anchor R6 class instance for dyad and anchor ("left"), "right")
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_R6(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{The anchor ("left", "right")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the dyad anchor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_R6}{}}}
\subsection{Method \code{get_dyad_left_anchor_R6()}}{
Get dyad anchor R6 class instance for dyad left anchor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the dyad left anchor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_R6}{}}}
\subsection{Method \code{get_dyad_right_anchor_R6()}}{
Get dyad anchor R6 class instance for dyad right anchor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance of the dyad right anchor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_text_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_text_by_id}{}}}
\subsection{Method \code{get_dyad_anchor_text_by_id()}}{
Get dyad anchor text for dyad and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_text_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The dyad id.}

\item{\code{anchor_id}}{Anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_show_image_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_show_image_by_id}{}}}
\subsection{Method \code{get_dyad_anchor_show_image_by_id()}}{
Get dyad anchor show image for dyad and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_show_image_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The dyad id.}

\item{\code{anchor_id}}{Anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_image_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_image_by_id}{}}}
\subsection{Method \code{get_dyad_anchor_image_by_id()}}{
Get dyad anchor image for dyad and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_image_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The dyad id.}

\item{\code{anchor_id}}{Anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Chracter string of dyad anchor image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_show_label_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_show_label_by_id}{}}}
\subsection{Method \code{get_dyad_anchor_show_label_by_id()}}{
Get dyad anchor show label for dyad and anchor id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_show_label_by_id(sig_id, anchor_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The dyad id.}

\item{\code{anchor_id}}{Anchor id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_text_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_text_by_anchor}{}}}
\subsection{Method \code{get_dyad_anchor_text_by_anchor()}}{
Get dyad anchor text for dyad and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_text_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{Anchor ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad anchor text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_show_image_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_show_image_by_anchor}{}}}
\subsection{Method \code{get_dyad_anchor_show_image_by_anchor()}}{
Get dyad anchor show image for dyad and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_show_image_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{Anchor ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_image_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_image_by_anchor}{}}}
\subsection{Method \code{get_dyad_anchor_image_by_anchor()}}{
Get dyad anchor  image for dyad and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_image_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{Anchor ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad anchor image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_show_label_by_anchor"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_show_label_by_anchor}{}}}
\subsection{Method \code{get_dyad_anchor_show_label_by_anchor()}}{
Get dyad anchor show label for dyad and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_show_label_by_anchor(id, anchor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{anchor}}{Anchor ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_text}{}}}
\subsection{Method \code{get_dyad_left_anchor_text()}}{
Get dyad left anchor text for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_text(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad left anchor text
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_show_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_show_image}{}}}
\subsection{Method \code{get_dyad_left_anchor_show_image()}}{
Get dyad left anchor show image for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_show_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad left anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_image}{}}}
\subsection{Method \code{get_dyad_left_anchor_image()}}{
Get dyad left anchor image for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad left anchor image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_show_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_show_label}{}}}
\subsection{Method \code{get_dyad_left_anchor_show_label()}}{
Get dyad left anchor show label for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_show_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad left anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_text"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_text}{}}}
\subsection{Method \code{get_dyad_right_anchor_text()}}{
Get dyad right anchor text for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_text(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad right anchor text
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_show_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_show_image}{}}}
\subsection{Method \code{get_dyad_right_anchor_show_image()}}{
Get dyad right anchor show image for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_show_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad right anchor show image
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_image}{}}}
\subsection{Method \code{get_dyad_right_anchor_image()}}{
Get dyad right anchor image for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad right anchor image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_show_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_show_label}{}}}
\subsection{Method \code{get_dyad_right_anchor_show_label()}}{
Get dyad right anchor show label for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_show_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of dyad right anchor show label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_anchor_id}{}}}
\subsection{Method \code{get_dyad_left_anchor_id()}}{
Get dyad left anchor id for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_anchor_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad left anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_anchor_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_anchor_id}{}}}
\subsection{Method \code{get_dyad_right_anchor_id()}}{
Get dyad right anchor id for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_anchor_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of dyad right anchor id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_all_anchor_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_all_anchor_ids}{}}}
\subsection{Method \code{get_dyad_all_anchor_ids()}}{
Get dyad anchor ids by dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_all_anchor_ids(id, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named list ("left", "right").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_column_name}{}}}
\subsection{Method \code{get_dyad_column_name()}}{
Get dyad column name for dyad and anchor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_column_name(id, column, original = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{column}}{Column to retrieve ("x", "X", left", "right").}

\item{\code{original}}{If TRUE return the data API value. Default FALSE, which is the normal usage.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_x_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_x_column_name}{}}}
\subsection{Method \code{get_dyad_x_column_name()}}{
Get dyad x column name for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_x_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad x column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_left_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_left_column_name}{}}}
\subsection{Method \code{get_dyad_left_column_name()}}{
Get dyad left column name for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_left_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad left column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_right_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_right_column_name}{}}}
\subsection{Method \code{get_dyad_right_column_name()}}{
Get dyad right column name for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_right_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad right column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_na_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_na_column_name}{}}}
\subsection{Method \code{get_dyad_na_column_name()}}{
Get dyad N/A column name for dyad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_na_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad N/A column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_aspercent_x_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_aspercent_x_column_name}{}}}
\subsection{Method \code{get_dyad_aspercent_x_column_name()}}{
Get as percent column name for dyad. This is the x column as a value between 0 and 100
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_aspercent_x_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the dyad as percent column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_compositional_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_compositional_column_names}{}}}
\subsection{Method \code{get_dyad_compositional_column_names()}}{
Get dyad compositional anchor column names by dyad (i.e. left and right).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_compositional_column_names(id, delist = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named list ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An unamed vector or named list of the dyad compositional anchor column names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_anchor_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_anchor_column_names}{}}}
\subsection{Method \code{get_dyad_anchor_column_names()}}{
Get dyad  anchor column names by dyad (i.e. left and right and N/A if applicable).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_anchor_column_names(id, delist = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named list ("left", "right").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An unamed vector or named list of the dyad compositional anchor column names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_all_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_all_column_names}{}}}
\subsection{Method \code{get_dyad_all_column_names()}}{
Get all the dyad  anchor column names by dyad (i.e. x, left and right and N/A if applicable).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_all_column_names(id, delist = TRUE, exclude_na = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The dyad id.}

\item{\code{delist}}{Default FALSE. If FALSE return as unnamed vector otherwise as a named list ("left", "right").}

\item{\code{exclude_na}}{Boolean, default FALSE, whether to exclude the N/A column name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An unamed vector or named list of all the dyad  anchor column names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_zone_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_zone_table_headers}{}}}
\subsection{Method \code{get_dyad_zone_table_headers()}}{
Return the dyad zone contingency table headers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_zone_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_zone_names}{}}}
\subsection{Method \code{get_dyad_zone_names()}}{
get all dyad zone column names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_zone_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_dyad_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_dyad_zone_name}{}}}
\subsection{Method \code{get_dyad_zone_name()}}{
Get the data zone column name for a given dyad
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_dyad_zone_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{dyad id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_dyad_left_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_dyad_left_label_value}{}}}
\subsection{Method \code{update_dyad_left_label_value()}}{
update dyad label left value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_dyad_left_label_value(id, value, property = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-update_dyad_right_label_value"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-update_dyad_right_label_value}{}}}
\subsection{Method \code{update_dyad_right_label_value()}}{
update dyad label right value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$update_dyad_right_label_value(id, value, property = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The signifier id.}

\item{\code{value}}{The new value.}

\item{\code{property}}{the property to update. Should be valid for the signifier type. Optional, if blank, title used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_dyad_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_dyad_titles}{}}}
\subsection{Method \code{export_dyad_titles()}}{
Export dyad and dyad anchor titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_dyad_titles(ids = "", actual_export = TRUE, name_prefix = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{List of dyad ids to export. Default blank, all dyads}

\item{\code{actual_export}}{or return data frame. Default TRUE.}

\item{\code{name_prefix}}{prefix to put on the csv file name if actual_export TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the dyad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_dyad_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_dyad_titles}{}}}
\subsection{Method \code{import_dyad_titles()}}{
import dyad and dyad anchor titles from csv file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_dyad_titles(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{The name of the csv file to import or a data frame to import.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the triad anchor ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_count}{}}}
\subsection{Method \code{get_stones_count()}}{
Get stones count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of stones occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_ids}{}}}
\subsection{Method \code{get_stones_ids()}}{
Get stones ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework stones ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_na_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_na_column_name}{}}}
\subsection{Method \code{get_stones_na_column_name()}}{
Get data N/A column name for passed in stones id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_na_column_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stone id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the N/A column name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_background_image"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_background_image}{}}}
\subsection{Method \code{get_stones_background_image()}}{
Get stones background image url.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_background_image(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of background image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_axis_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_axis_R6}{}}}
\subsection{Method \code{get_stones_axis_R6()}}{
Get stones axes as a list of R6 class instance objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_axis_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of stones axis R6 class instance objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_axis_by_axis_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_axis_by_axis_R6}{}}}
\subsection{Method \code{get_stones_axis_by_axis_R6()}}{
Get stones axis as a R6 class instance object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_axis_by_axis_R6(id, axis)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{axis}}{The stone axis to return ("x" or "y")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance object of the returned axis.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_x_axis_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_x_axis_R6}{}}}
\subsection{Method \code{get_stones_x_axis_R6()}}{
Get stones x axis as a R6 class instance object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_x_axis_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance object of the x axis.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_y_axis_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_y_axis_R6}{}}}
\subsection{Method \code{get_stones_y_axis_R6()}}{
Get stones y axis as a R6 class instance object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_y_axis_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 class instance object of the y axis.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_axis_name_by_axis"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_axis_name_by_axis}{}}}
\subsection{Method \code{get_stones_axis_name_by_axis()}}{
Get stones axis name by axis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_axis_name_by_axis(id, axis)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{axis}}{The stone axis ("x" or "y")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned axis name.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_axis_end_label_by_axis"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_axis_end_label_by_axis}{}}}
\subsection{Method \code{get_stones_axis_end_label_by_axis()}}{
Get stones axis end label by axis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_axis_end_label_by_axis(id, axis)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{axis}}{The stone axis ("x" or "y")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned axis end label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_axis_start_label_by_axis"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_axis_start_label_by_axis}{}}}
\subsection{Method \code{get_stones_axis_start_label_by_axis()}}{
Get stones axis start label by axis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_axis_start_label_by_axis(id, axis)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{axis}}{The stone axis ("x" or "y")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned axis start label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_xaxis_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_xaxis_name}{}}}
\subsection{Method \code{get_stones_xaxis_name()}}{
Get stones x axis name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_xaxis_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned x axis name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_xaxis_end_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_xaxis_end_label}{}}}
\subsection{Method \code{get_stones_xaxis_end_label()}}{
Get stones x axis end label
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_xaxis_end_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned x axis end label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_xaxis_start_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_xaxis_start_label}{}}}
\subsection{Method \code{get_stones_xaxis_start_label()}}{
Get stones x axis start label
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_xaxis_start_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned x axis start label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_yaxis_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_yaxis_name}{}}}
\subsection{Method \code{get_stones_yaxis_name()}}{
Get stones y axis name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_yaxis_name(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned y axis name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_yaxis_end_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_yaxis_end_label}{}}}
\subsection{Method \code{get_stones_yaxis_end_label()}}{
Get stones y axis end label
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_yaxis_end_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned y axis end label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_yaxis_start_label"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_yaxis_start_label}{}}}
\subsection{Method \code{get_stones_yaxis_start_label()}}{
Get stones y axis start label
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_yaxis_start_label(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of returned y axis start label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stones_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stones_R6}{}}}
\subsection{Method \code{get_stones_stones_R6()}}{
Get stones stones as a list of R6 class instances.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stones_R6(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of stones stones as R6 class instances.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_items_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_items_ids}{}}}
\subsection{Method \code{get_stones_items_ids()}}{
Get stones stones ids.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_items_ids(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
vector of stones stones ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_titles}{}}}
\subsection{Method \code{get_stones_stone_titles()}}{
Return the stones stone titles for a stones id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_titles(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{= the stones id}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_ids}{}}}
\subsection{Method \code{get_stones_stone_ids()}}{
Get stones stones ids - using the common "stone" name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_ids(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
vector of stones stones ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_num_items"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_num_items}{}}}
\subsection{Method \code{get_stones_num_items()}}{
Get stones stones number of items
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_num_items(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
numeric - the number of items.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_items_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_items_property}{}}}
\subsection{Method \code{get_stones_items_property()}}{
Get all property values for a stones stones.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_items_property(id, property, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{property}}{The property to return.}

\item{\code{delist}}{Default FALSE, reuturn list with stone ids as names, otherwise property values as vector}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
vector of stones stones property values or list of values with ids as names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_items_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_items_title}{}}}
\subsection{Method \code{get_stones_items_title()}}{
Get all title values for a stones stones.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_items_title(stones_id, stone_id = NULL, delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stones_id}}{The stones id.}

\item{\code{stone_id}}{The id of the individual stone. Default NULL to include all individual stones.}

\item{\code{delist}}{Default FALSE, reuturn list with stone ids as names, otherwise property values as vector}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
vector of stones stones title values or list of values with ids as names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_by_id_R6"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_by_id_R6}{}}}
\subsection{Method \code{get_stones_stone_by_id_R6()}}{
Get stones stone by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_by_id_R6(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A stones stone as an R6 class instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_title_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_title_by_id}{}}}
\subsection{Method \code{get_stones_stone_title_by_id()}}{
Get stones stone title by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_title_by_id(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the stone title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_tooltip_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_tooltip_by_id}{}}}
\subsection{Method \code{get_stones_stone_tooltip_by_id()}}{
Get stones stone tooltip by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_tooltip_by_id(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the stone tooltip
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_image_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_image_by_id}{}}}
\subsection{Method \code{get_stones_stone_image_by_id()}}{
Get stones stone image URL by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_image_by_id(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the stone image URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_visible_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_visible_by_id}{}}}
\subsection{Method \code{get_stones_stone_visible_by_id()}}{
Get stones stone visible by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_visible_by_id(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean of the stone Visible
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_compositional_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_compositional_column_names}{}}}
\subsection{Method \code{get_stones_compositional_column_names()}}{
Get stones stones data column names by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_compositional_column_names(id, original = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{original}}{If TRUE return the pre-data processind column names. Default FALSE, normal value FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of column names for the stones stones
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_compositional_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_compositional_column_names}{}}}
\subsection{Method \code{get_stones_stone_compositional_column_names()}}{
Get stones stone data column names by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_compositional_column_names(
  sig_id,
  stone_id,
  axis = "",
  original = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones id.}

\item{\code{stone_id}}{The stones stone id}

\item{\code{axis}}{Default "" for both axis columns otherwise set to "x" (or "X") or "y" ("Y")}

\item{\code{original}}{If TRUE return the pre-data processind column names. Default FALSE, normal value FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of column names for the stones stones
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_title_by_zone_column_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_title_by_zone_column_id}{}}}
\subsection{Method \code{get_stones_stone_title_by_zone_column_id()}}{
Get stones stone title by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_title_by_zone_column_id(zone_column_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zone_column_id}}{A zone column ID as would be retrieved by the get_stones_4_zone_names function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A title combining the stones title and the stone title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_split_ids_by_zone_column_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_split_ids_by_zone_column_id}{}}}
\subsection{Method \code{get_split_ids_by_zone_column_id()}}{
Get stones stone title by id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_split_ids_by_zone_column_id(
  zone_column_id,
  include_headers = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zone_column_id}}{A zone column ID as would be retrieved by the get_stones_4_zone_names function.}

\item{\code{include_headers}}{default TRUE, whether to return the list headers or just the data. Headers "stones_id" and "stone_id"}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_zone_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_zone_table_headers}{}}}
\subsection{Method \code{get_stones_stone_zone_table_headers()}}{
Return the stone zone contingency table headers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_zone_table_headers(type, from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{Type of stone zone - values ("x", "y", "4", "9")}

\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_zone_x_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_zone_x_table_headers}{}}}
\subsection{Method \code{get_stones_stone_zone_x_table_headers()}}{
Return the stone zone contingency table headers for the x stone zones
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_zone_x_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label without the "from" or "to" prefix}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_zone_y_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_zone_y_table_headers}{}}}
\subsection{Method \code{get_stones_stone_zone_y_table_headers()}}{
Return the stone zone contingency table headers for the y stone zones
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_zone_y_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label without the "from" or "to" prefix}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_zone_4_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_zone_4_table_headers}{}}}
\subsection{Method \code{get_stones_stone_zone_4_table_headers()}}{
Return the stone zone contingency table headers for the 4 stone zones
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_zone_4_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label without the "from" or "to" prefix}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_zone_9_table_headers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_zone_9_table_headers}{}}}
\subsection{Method \code{get_stones_stone_zone_9_table_headers()}}{
Return the stone zone contingency table headers for the 9 stone zones
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_zone_9_table_headers(from_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_to}}{Whether zone headers for the "from" or the "to" axis. NULL returns simple label without the "from" or "to" prefix}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_zone_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_zone_types}{}}}
\subsection{Method \code{get_stones_zone_types()}}{
Return the stone zone options - x, y, 4 and 9
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_zone_types(include_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{Default FALSE, whether to return the list named ("x-zones", "y-zones", "4-zones", "9-zones")}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_zone_name_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_zone_name_by_type}{}}}
\subsection{Method \code{get_stones_zone_name_by_type()}}{
Return data column name for a stone zone type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_zone_name_by_type(sig_id, stone_id, type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones ID}

\item{\code{stone_id}}{The stone ID}

\item{\code{type}}{- the type of zone ("x", "y", "4" or "9")}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_zone_names_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_zone_names_by_type}{}}}
\subsection{Method \code{get_stones_zone_names_by_type()}}{
Return data column names for a stones zone type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_zone_names_by_type(id = NULL, type = "x")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Default NULL, The stones ID. If null, then all stones ids will be returned.}

\item{\code{type}}{The zone type. Values "x", "y", "4" or "9"}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_x_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_x_zone_name}{}}}
\subsection{Method \code{get_stones_stone_x_zone_name()}}{
Get the data x zone column name for a given stones and stone
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_x_zone_name(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{stones id.}

\item{\code{stone_id}}{stone id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_x_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_x_zone_names}{}}}
\subsection{Method \code{get_stones_x_zone_names()}}{
Get the data x zone column name for a given stones id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_x_zone_names(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{stones id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_y_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_y_zone_name}{}}}
\subsection{Method \code{get_stones_stone_y_zone_name()}}{
Get the data y zone column name for a given stones and stone
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_y_zone_name(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{stones id.}

\item{\code{stone_id}}{stone id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_y_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_y_zone_names}{}}}
\subsection{Method \code{get_stones_y_zone_names()}}{
Get the data 4 zone column name for a given stones id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_y_zone_names(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{stones id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_4_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_4_zone_name}{}}}
\subsection{Method \code{get_stones_stone_4_zone_name()}}{
Get the data 4 zone column name for a given stones and stone
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_4_zone_name(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{stones id.}

\item{\code{stone_id}}{stone id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_4_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_4_zone_names}{}}}
\subsection{Method \code{get_stones_4_zone_names()}}{
Get the data 4 zone column name for a given stones id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_4_zone_names(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{stones id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_stone_9_zone_name"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_stone_9_zone_name}{}}}
\subsection{Method \code{get_stones_stone_9_zone_name()}}{
Get the data 9 zone column name for a given stones and stone
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_stone_9_zone_name(sig_id, stone_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{stones id.}

\item{\code{stone_id}}{stone id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_stones_9_zone_names"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_stones_9_zone_names}{}}}
\subsection{Method \code{get_stones_9_zone_names()}}{
Get the data 9 zone column name for a given stones id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_stones_9_zone_names(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{stones id.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-Update_stones_axis_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-Update_stones_axis_property}{}}}
\subsection{Method \code{Update_stones_axis_property()}}{
Update stone axis property
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$Update_stones_axis_property(id, axis, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{axis}}{The stones axis ("x" or "y")}

\item{\code{property}}{The property to update (values "end_label, "start_label", "name")}

\item{\code{value}}{the updated value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-Update_stones_x_axis_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-Update_stones_x_axis_property}{}}}
\subsection{Method \code{Update_stones_x_axis_property()}}{
Update stone x axis property
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$Update_stones_x_axis_property(id, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{property}}{The property to update (values "end_label, "start_label", "name")}

\item{\code{value}}{the updated value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-Update_stones_y_axis_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-Update_stones_y_axis_property}{}}}
\subsection{Method \code{Update_stones_y_axis_property()}}{
Update stone y axis property
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$Update_stones_y_axis_property(id, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The stones id.}

\item{\code{property}}{The property to update (values "end_label, "start_label", "name")}

\item{\code{value}}{the updated value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-Update_stones_stone_property"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-Update_stones_stone_property}{}}}
\subsection{Method \code{Update_stones_stone_property()}}{
Update stone axis property
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$Update_stones_stone_property(sig_id, stone_id, property, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{The stones signifier id.}

\item{\code{stone_id}}{The id of the stone}

\item{\code{property}}{The property to update (values "end_label, "start_label", "name")}

\item{\code{value}}{the updated value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_stones_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_stones_titles}{}}}
\subsection{Method \code{export_stones_titles()}}{
Export stone titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_stones_titles(
  ids = "",
  actual_export = TRUE,
  name_prefix = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{List of stone ids to export. Default blank, all freetexts}

\item{\code{actual_export}}{or return data frame. Default TRUE.}

\item{\code{name_prefix}}{prefix to put on the csv file name if actual_export TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the freetext ids and titles.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_stones_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_stones_titles}{}}}
\subsection{Method \code{import_stones_titles()}}{
import stones titles from csv file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_stones_titles(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{data frame or csv file name of the stones data to import.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the stones ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_freetext_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_freetext_count}{}}}
\subsection{Method \code{get_freetext_count()}}{
Get freetext count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_freetext_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of freetext occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_freetext_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_freetext_ids}{}}}
\subsection{Method \code{get_freetext_ids()}}{
Get freetext ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_freetext_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework freetext ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_freetext_fragments"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_freetext_fragments}{}}}
\subsection{Method \code{get_freetext_fragments()}}{
Get freetext fragments - those ids that are fragments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_freetext_fragments()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of signifier ids for fragment free text signifier definitions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_freetext_default"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_freetext_default}{}}}
\subsection{Method \code{get_freetext_default()}}{
Get freetext default value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_freetext_default(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The freetext id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character strong of the default value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_freetext_multiline"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_freetext_multiline}{}}}
\subsection{Method \code{get_freetext_multiline()}}{
Whether the freetext allows multi-line input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_freetext_multiline(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The freetext id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean specifying whether the freetext is multiline input
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-export_freetext_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-export_freetext_titles}{}}}
\subsection{Method \code{export_freetext_titles()}}{
Export freetext titles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$export_freetext_titles(
  ids = "",
  actual_export = TRUE,
  name_prefix = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{List of freetext ids to export. Default blank, all freetexts}

\item{\code{actual_export}}{or return data frame. Default TRUE.}

\item{\code{name_prefix}}{prefix to put on the csv file name if actual_export TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the freetext ids and titles.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-import_freetext_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-import_freetext_titles}{}}}
\subsection{Method \code{import_freetext_titles()}}{
import freetext titles from csv file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$import_freetext_titles(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{data frame or csv file name of the freetext data to import.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self if actual export otherwise a data frame of the freetext ids and title.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_imageselect_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_imageselect_count}{}}}
\subsection{Method \code{get_imageselect_count()}}{
Get imageselect count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_imageselect_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of imageselect occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_imageselect_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_imageselect_ids}{}}}
\subsection{Method \code{get_imageselect_ids()}}{
Get imageselect ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_imageselect_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework imageselect ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_imageselect_items"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_imageselect_items}{}}}
\subsection{Method \code{get_imageselect_items()}}{
Get the imageselect items.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_imageselect_items(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The imageselect id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of URLs to the image select item image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_imageselect_items_titles"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_imageselect_items_titles}{}}}
\subsection{Method \code{get_imageselect_items_titles()}}{
Get the imageselect item titles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_imageselect_items_titles(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The imageselect id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of titles to the image select item image (currently the name of the file named at the end of the url).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_imageselect_item_title"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_imageselect_item_title}{}}}
\subsection{Method \code{get_imageselect_item_title()}}{
Get the imageselect item titles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_imageselect_item_title(imageselect_id, image_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imageselect_id}}{The imageselect id.}

\item{\code{image_id}}{The id of the image (currently this can only be the image url and this along will be used)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Title of the image select item image (currently the name of the file named at the end of the url).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_photo_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_photo_count}{}}}
\subsection{Method \code{get_photo_count()}}{
Get photo count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_photo_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of photo occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_photo_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_photo_ids}{}}}
\subsection{Method \code{get_photo_ids()}}{
Get photo ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_photo_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_audio_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_audio_count}{}}}
\subsection{Method \code{get_audio_count()}}{
Get audio count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_audio_count(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer of the number of audio occurences
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_audio_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_audio_ids}{}}}
\subsection{Method \code{get_audio_ids()}}{
Get audio ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_audio_ids(keep_only_include = FALSE, sig_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}

\item{\code{sig_class}}{- Default NULL, a vector of classes to include found in get_supported_signifier_classes() function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework audio ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_uniqueid_count"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_uniqueid_count}{}}}
\subsection{Method \code{get_uniqueid_count()}}{
Get uniqueid count
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_uniqueid_count()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer of the number of uniqueid occurences (should only return 1)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_uniqueid_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_uniqueid_ids}{}}}
\subsection{Method \code{get_uniqueid_ids()}}{
Get uniqueid ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_uniqueid_ids(keep_only_include = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_only_include}}{TRUE or FALSE, if TRUE only those flagged with include == TRUE returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of the framework uniqueid ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-is_polymorphic"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-is_polymorphic}{}}}
\subsection{Method \code{is_polymorphic()}}{
Is a polymorphic framework
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$is_polymorphic()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
boolean TRUE if there are polymorphic signifiers defined
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-has_polymorphic_anchor_modification"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-has_polymorphic_anchor_modification}{}}}
\subsection{Method \code{has_polymorphic_anchor_modification()}}{
Has polymorphic anchor modification
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$has_polymorphic_anchor_modification()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
boolean TRUE if there are polymorphic anchor modifications
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_ids}{}}}
\subsection{Method \code{get_poly_sig_ids()}}{
Get signifier ids of defined polymorphic signifiers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of signifier ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_ids_with_types"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_ids_with_types}{}}}
\subsection{Method \code{get_poly_sig_ids_with_types()}}{
Get polymorphic sig ids and their types (ids names, types entries)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_ids_with_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of signifier ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_ids_for_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_ids_for_type}{}}}
\subsection{Method \code{get_poly_sig_ids_for_type()}}{
Get polymorphic signifier ids by type(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_ids_for_type(ttypes)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ttypes}}{A vector containing one or more types to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of signifier ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_anchor_modification_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_anchor_modification_ids}{}}}
\subsection{Method \code{get_poly_anchor_modification_ids()}}{
Get signifier modified ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_anchor_modification_ids(include_poly_id = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_poly_id}}{Boolean, default FALSE, whether to include the polymorphic attributeIDs as names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of signifier ids
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_anchor_modification_ids_with_type"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_anchor_modification_ids_with_type}{}}}
\subsection{Method \code{get_poly_anchor_modification_ids_with_type()}}{
Get signifier modified ids with type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_anchor_modification_ids_with_type()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of signifier ids with with types. Names are ids, values types
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_modification_sig_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_modification_sig_id}{}}}
\subsection{Method \code{get_poly_modification_sig_id()}}{
Get transformed signifier id for signifier id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_modification_sig_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Id of the signifier that has been modified through plymorphic to anchor transform}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified signifier id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_overlay_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_overlay_id}{}}}
\subsection{Method \code{get_poly_overlay_id()}}{
Get polymorphic overlay id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_overlay_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Id of the polymoprhic signifier}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The overlay id for the polymorphic signifier
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_type_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_type_by_id}{}}}
\subsection{Method \code{get_poly_type_by_id()}}{
Get signifier type for polymorphic signifier id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_type_by_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Polymorphic signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Signifier type of the id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_ids}{}}}
\subsection{Method \code{get_poly_sig_to_ids()}}{
Get the ids of the polymorphic to signifiers for a given polymorphic id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_ids(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Polymorphic signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ids of those signifiers polymorphic to the one passed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_id_by_poly_to_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_id_by_poly_to_id}{}}}
\subsection{Method \code{get_poly_id_by_poly_to_id()}}{
Get the polymorphic signifier id for one of the polymorphic_to signifier ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_id_by_poly_to_id(poly_to_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{poly_to_id}}{the polymorphic to id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ids of those signifiers polymorphic to the one passed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_by_id()}}{
Get the full polymorphic to information for a given polymorphic signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_by_id(sig_id, poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dataframe row of polymorphic to information record
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_cols_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_cols_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_cols_by_id()}}{
Get the full polymorphic to data column names for a given polymorphic signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_cols_by_id(sig_id, poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of the data column names for the polymorphic id and polymorphic to id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_top_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_top_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_top_by_id()}}{
Get the top polymorphic id for signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_top_by_id(sig_id, poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic to top id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_left_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_left_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_left_by_id()}}{
Get the left polymorphic id for signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_left_by_id(sig_id, poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic to left id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_right_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_right_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_right_by_id()}}{
Get the right polymorphic id for signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_right_by_id(sig_id, poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic to right id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_to_anchor_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_to_anchor_by_id}{}}}
\subsection{Method \code{get_poly_sig_to_anchor_by_id()}}{
Get the anchor polymorphic id for signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_to_anchor_by_id(sig_id, poly_id, anchor = "left")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sig_id}}{Polymorphic signifier id.}

\item{\code{poly_id}}{Polymorphic to signifier id.}

\item{\code{anchor}}{"left", "top", "right" anchor to return (defaults to "left").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic to top id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_anchor_modifications"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_anchor_modifications}{}}}
\subsection{Method \code{get_poly_anchor_modifications()}}{
Get the anchor polymorphic id for signifier id and polymorphic to id
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_anchor_modifications(delist = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{delist}}{Boolean, default FALSE, whether to include the list names..}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic to top id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-get_poly_sig_id"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-get_poly_sig_id}{}}}
\subsection{Method \code{get_poly_sig_id()}}{
NOTE - not sure on this function check it
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$get_poly_sig_id(poly_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{poly_id}}{Not sure - please test and check. This is not used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The polymorphic signifier ID
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_freetext"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_freetext}{}}}
\subsection{Method \code{add_freetext()}}{
Add a freetext signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_freetext(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  multiline,
  include = TRUE,
  default = "",
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the freetext signifier title}

\item{\code{tooltip}}{- the freetext signifier tooltip}

\item{\code{allow_na}}{- whether the freetext signifier allows N/A}

\item{\code{fragment}}{- whether the freetext signifier is a fragment entry}

\item{\code{required}}{- whether the freetext signifier is mandatory}

\item{\code{sticky}}{- whether the freetext signifier is a sticky}

\item{\code{multiline}}{- whether the freetext signifier entry is multi-line}

\item{\code{include}}{- whether the freetext signifier is included in the capture}

\item{\code{default}}{- the freetext signifier default value}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_imageselect"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_imageselect}{}}}
\subsection{Method \code{add_imageselect()}}{
Add a image select signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_imageselect(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  items,
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the imageselect signifier title}

\item{\code{tooltip}}{- the imageselect signifier tooltip}

\item{\code{allow_na}}{- whether the imageselect signifier allows N/A}

\item{\code{fragment}}{- whether the imageselect signifier is a fragment entry}

\item{\code{required}}{- whether the imageselect signifier is mandatory}

\item{\code{sticky}}{- whether the imageselect signifier is a sticky}

\item{\code{items}}{- a vector of imageselect items  (path/file) to add (or data frame with imageselect path/file)}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_audio"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_audio}{}}}
\subsection{Method \code{add_audio()}}{
Add an audio signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_audio(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  theader = NULL,
  sig_class = "signifier",
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the audio signifier title}

\item{\code{tooltip}}{- the audio signifier tooltip}

\item{\code{allow_na}}{- whether the audio signifier allows N/A}

\item{\code{fragment}}{- whether the audio signifier is a fragment entry}

\item{\code{required}}{- whether the audio signifier is mandatory}

\item{\code{sticky}}{- whether the audio signifier is a sticky#'}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_photo"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_photo}{}}}
\subsection{Method \code{add_photo()}}{
Add an photo signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_photo(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  theader = NULL,
  sig_class = "signifier",
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the photo signifier title}

\item{\code{tooltip}}{- the photo signifier tooltip}

\item{\code{allow_na}}{- whether the photo signifier allows N/A}

\item{\code{fragment}}{- whether the photo signifier is a fragment entry}

\item{\code{required}}{- whether the photo signifier is mandatory}

\item{\code{sticky}}{- whether the photo signifier is a sticky}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_list"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_list}{}}}
\subsection{Method \code{add_list()}}{
Add an list signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_list(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  items,
  max_responses,
  min_responses,
  other_item_id,
  other_signifier_id,
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the list signifier title}

\item{\code{tooltip}}{- the list signifier tooltip}

\item{\code{allow_na}}{- whether the list signifier allows N/A}

\item{\code{fragment}}{- whether the list signifier is a fragment entry}

\item{\code{required}}{- whether the list signifier is mandatory}

\item{\code{sticky}}{- whether the list signifier is a sticky}

\item{\code{items}}{- data frame of the list items with columns id, title, tooltip, visible, other_signifier_id blank ids will be generated.}

\item{\code{max_responses}}{- integer of the maximum responses for the list.}

\item{\code{min_responses}}{- inteter of the minimum responses for the list.}

\item{\code{other_item_id}}{- The signifier level other item id.}

\item{\code{other_signifier_id}}{- The signifier ID if there is an "other" text box (not supporting dynamic creation of embedded)}

\item{\code{sig_class}}{- default signifier, user defined as the class of the list -  but system values are found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_triad"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_triad}{}}}
\subsection{Method \code{add_triad()}}{
Add an triad signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_triad(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  labels,
  pointer_image,
  background_image,
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the triad signifier title}

\item{\code{tooltip}}{- the list signifier tooltip}

\item{\code{allow_na}}{- whether the list signifier allows N/A}

\item{\code{fragment}}{- whether the list signifier is a fragment entry}

\item{\code{required}}{- whether the list signifier is mandatory}

\item{\code{sticky}}{- whether the list signifier is a sticky}

\item{\code{labels}}{- a 3 row dataframe with top, left, right anchor definitions. dataframe columns id, text, image, show_image and show_label}

\item{\code{pointer_image}}{- url to the triad pointer image file}

\item{\code{background_image}}{- url to the triad background image}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_dyad"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_dyad}{}}}
\subsection{Method \code{add_dyad()}}{
Add an dyad signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_dyad(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  labels,
  pointer_image,
  background_image,
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the dyad signifier title}

\item{\code{tooltip}}{- the list signifier tooltip}

\item{\code{allow_na}}{- whether the list signifier allows N/A}

\item{\code{fragment}}{- whether the list signifier is a fragment entry}

\item{\code{required}}{- whether the list signifier is mandatory}

\item{\code{sticky}}{- whether the list signifier is a sticky}

\item{\code{labels}}{- a 3 row dataframe with left, right anchor definitions. dataframe columns id, text, image, show_image and show_label}

\item{\code{pointer_image}}{- url to the dyad pointer image file}

\item{\code{background_image}}{- url to the dyad background image}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_stones"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_stones}{}}}
\subsection{Method \code{add_stones()}}{
Add an stones signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_stones(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  stones,
  background_image,
  x_name,
  x_end_label,
  x_start_label,
  y_name,
  y_end_label,
  y_start_label,
  sig_class = "signifier",
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the stones signifier title}

\item{\code{tooltip}}{- the stones signifier tooltip}

\item{\code{allow_na}}{- whether the stones signifier allows N/A}

\item{\code{fragment}}{- whether the stones signifier is a fragment entry}

\item{\code{required}}{- whether the stones signifier is mandatory}

\item{\code{sticky}}{- whether the stones signifier is a sticky}

\item{\code{stones}}{- a dataframe containing the individual stone definitions, with columns id, image, title, tooltip}

\item{\code{background_image}}{- url to the dyad background image}

\item{\code{x_name}}{- the x label name}

\item{\code{x_end_label}}{- the x end label name}

\item{\code{x_start_label}}{- the x start label name}

\item{\code{y_name}}{- the y label name}

\item{\code{y_end_label}}{- the y end label name}

\item{\code{y_start_label}}{- the y start label name}

\item{\code{sig_class}}{- Default signifier, a vector of classes to include found in get_supported_signifier_classes() function.}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_uniqueid"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_uniqueid}{}}}
\subsection{Method \code{add_uniqueid()}}{
Add an uniqueid signifier definition to the parent definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_uniqueid(
  title,
  tooltip,
  allow_na,
  fragment,
  required,
  sticky,
  theader = NULL,
  id = "",
  load = "subsequent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{- the uniqueid signifier title}

\item{\code{tooltip}}{- the uniqueid signifier tooltip}

\item{\code{allow_na}}{- whether the uniqueid signifier allows N/A}

\item{\code{fragment}}{- whether the uniqueid signifier is a fragment entry}

\item{\code{required}}{- whether the uniqueid signifier is mandatory}

\item{\code{sticky}}{- whether the uniqueid signifier is a sticky}

\item{\code{theader}}{-  a 3 elment named list with "name", "id" and "language" as list names. NULL will take the parent framework to add}

\item{\code{id}}{- the freetext signifier id - if blank or NULL, id is calculated automatically}

\item{\code{load}}{Whether the added signifier is the initial load or a subsequent load (adding a new signifier after the initial load from the json)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-add_polymorphic_signifiers"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-add_polymorphic_signifiers}{}}}
\subsection{Method \code{add_polymorphic_signifiers()}}{
Apply a polymorphic definition to the framework. Only one of the parameters should be passed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$add_polymorphic_signifiers(
  tpoly_data = NULL,
  tpoly_data_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tpoly_data}}{- the read JSON from the polymorphic signifier json file.}

\item{\code{tpoly_data_file}}{- The JSON path/file name for the json file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-generate_shiny_tree_objects"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-generate_shiny_tree_objects}{}}}
\subsection{Method \code{generate_shiny_tree_objects()}}{
generate shinyTREE objects of triad or dyad signifiers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$generate_shiny_tree_objects(type = "all", keep_only_include = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{- the signifier type - thus "triad", "dyad" or "all" (for both). Default "all".}

\item{\code{keep_only_include}}{- only include those signifiers with include TRUE}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signifiers-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Signifiers-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signifiers$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
